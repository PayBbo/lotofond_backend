"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["messages"],{

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/pages/Messages.vue?vue&type=script&lang=js":
/*!*********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/pages/Messages.vue?vue&type=script&lang=js ***!
  \*********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _components_CardImageCategory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/CardImageCategory */ \"./resources/js/components/CardImageCategory.vue\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: \"Messages\",\n  components: {\n    BktCardImageCategory: _components_CardImageCategory__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n  },\n  data: function data() {\n    return {\n      info_categories: [{\n        id: 1,\n        code: 'platform',\n        title: 'сообщения платформы',\n        color: 'green'\n      }, {\n        id: 2,\n        code: 'favourite',\n        title: 'избранное',\n        color: 'yellow'\n      }, {\n        id: 3,\n        code: 'monitoring',\n        title: 'мониторинг',\n        color: 'red'\n      }],\n      selectedType: 'all',\n      type_loading: false,\n      signal: null,\n      controller: null\n    };\n  },\n  created: function created() {\n    var page = 1;\n    if (sessionStorage.getItem('messages_page')) {\n      page = sessionStorage.getItem('messages_page');\n    }\n    this.getData(page);\n  },\n  computed: {\n    items: function items() {\n      return this.$store.getters.notifications;\n    },\n    pagination_data: function pagination_data() {\n      return this.$store.getters.notifications_pagination;\n    },\n    loading: function loading() {\n      return this.$store.getters.notifications_loading;\n    },\n    notifications_count: function notifications_count() {\n      return this.$store.getters.notifications_count;\n    }\n  },\n  methods: {\n    getData: function getData() {\n      var _arguments = arguments,\n        _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var page, type;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              page = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : 1;\n              _this.controller = new AbortController();\n              _this.signal = _this.controller.signal;\n              type = _this.selectedType;\n              if (sessionStorage.getItem('messages_page_type')) {\n                type = sessionStorage.getItem('messages_page_type');\n                if (type != _this.selectedType) {\n                  _this.selectedType = type;\n                }\n              }\n              sessionStorage.setItem('messages_page', page + '');\n              _context.next = 8;\n              return _this.$store.dispatch('getNotifications', {\n                page: page,\n                type: type,\n                signal: _this.signal\n              });\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    setType: function setType(type) {\n      var _this2 = this;\n      // if (!this.loading) {\n      if (this.signal) {\n        this.controller.abort();\n      }\n      this.type_loading = true;\n      this.selectedType = type;\n      sessionStorage.setItem('messages_page_type', type);\n      setTimeout(function () {\n        _this2.getData(1).then(function (resp) {\n          _this2.type_loading = false;\n        })[\"catch\"](function (resp) {\n          _this2.type_loading = false;\n        });\n      }, 50);\n      // }\n    },\n    changePage: function changePage(page) {\n      var _this3 = this;\n      if (this.signal) {\n        this.controller.abort();\n      }\n      setTimeout(function () {\n        _this3.getData(page).then(function () {\n          var el = _this3.$refs.cardList;\n          if (el) {\n            requestAnimationFrame(function () {\n              el.scrollIntoView({\n                block: 'start',\n                scrollBehavior: 'smooth'\n              });\n              requestAnimationFrame(function () {\n                el.scrollIntoView();\n              });\n            });\n          }\n        });\n      }, 50);\n    },\n    navigate: function navigate(message) {\n      if (message.type === 'monitoring') {\n        sessionStorage.setItem('monitoring_path_id', message.dataMonitoring.folderInfo.pathId);\n        sessionStorage.setItem('monitoring' + message.dataMonitoring.folderInfo.pathId + '_page', '1');\n        this.$router.push('/monitoring');\n      }\n      if (message.type === 'favourite') {\n        this.$router.push('/lot/' + message.dataFavourite.id);\n      }\n      // this.$router.push(path);\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/pages/Messages.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/pages/Messages.vue?vue&type=template&id=507785d5&scoped=true":
/*!********************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/pages/Messages.vue?vue&type=template&id=507785d5&scoped=true ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   render: () => (/* binding */ render),\n/* harmony export */   staticRenderFns: () => (/* binding */ staticRenderFns)\n/* harmony export */ });\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"bkt-messages bkt-page bkt-container\"\n  }, [_c(\"h1\", {\n    staticClass: \"bkt-page__title\"\n  }, [_vm._v(\"\\n        Сообщения\\n    \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bkt-content\"\n  }, [_c(\"div\", {\n    ref: \"cardList\",\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"col-12 col-lg-3\"\n  }, [_c(\"div\", {\n    staticClass: \"bkt-history__chats\"\n  }, [_c(\"ul\", {\n    staticClass: \"list-unstyled text-left pt-4 pb-4\"\n  }, [_c(\"li\", {\n    staticClass: \"bkt-chat\",\n    \"class\": {\n      \"bkt-bg-primary-lighter\": _vm.selectedType == \"all\"\n    },\n    attrs: {\n      id: \"chat-1\"\n    },\n    on: {\n      click: function click($event) {\n        return _vm.setType(\"all\");\n      }\n    }\n  }, [_vm._v(\"\\n                            Все\\n                            \"), _c(\"div\", {\n    staticClass: \"bkt-chat__num rounded-pill bkt-bg-primary bkt-text-neutral-light\"\n  }, [_vm.notifications_count.all > 0 ? _c(\"span\", {\n    staticClass: \"p-2\"\n  }, [_vm._v(\"\\n                                    \" + _vm._s(_vm.notifications_count.all) + \"\\n                                \")]) : _vm._e()])]), _vm._v(\" \"), _c(\"li\", {\n    staticClass: \"bkt-chat\",\n    \"class\": {\n      \"bkt-bg-green-lighter\": _vm.selectedType == \"platform\"\n    },\n    attrs: {\n      id: \"chat-2\"\n    },\n    on: {\n      click: function click($event) {\n        return _vm.setType(\"platform\");\n      }\n    }\n  }, [_c(\"div\", {\n    staticClass: \"bkt-chat__text\"\n  }, [_c(\"bkt-icon\", {\n    attrs: {\n      name: \"Bell\",\n      color: \"green\",\n      width: \"15px\",\n      height: \"15px\"\n    }\n  }), _vm._v(\"\\n                                Сообщения платформы\\n                            \")], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bkt-chat__num rounded-pill bkt-bg-green bkt-text-neutral-light\"\n  }, [_vm.notifications_count.platform > 0 ? _c(\"span\", {\n    staticClass: \"p-2\"\n  }, [_vm._v(\"\\n                                    \" + _vm._s(_vm.notifications_count.platform) + \"\\n                                \")]) : _vm._e()])]), _vm._v(\" \"), _c(\"li\", {\n    staticClass: \"bkt-chat\",\n    \"class\": {\n      \"bkt-bg-yellow-lighter\": _vm.selectedType == \"favourite\"\n    },\n    attrs: {\n      id: \"chat-3\"\n    },\n    on: {\n      click: function click($event) {\n        return _vm.setType(\"favourite\");\n      }\n    }\n  }, [_c(\"div\", {\n    staticClass: \"bkt-chat__text\"\n  }, [_c(\"bkt-icon\", {\n    attrs: {\n      name: \"Star\",\n      color: \"yellow\",\n      width: \"15px\",\n      height: \"15px\"\n    }\n  }), _vm._v(\"\\n                                Избранное\\n                            \")], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bkt-chat__num rounded-pill bkt-bg-yellow bkt-text-neutral-light\"\n  }, [_vm.notifications_count.favourite > 0 ? _c(\"span\", {\n    staticClass: \"p-2\"\n  }, [_vm._v(\"\\n                                    \" + _vm._s(_vm.notifications_count.favourite) + \"\\n                                \")]) : _vm._e()])]), _vm._v(\" \"), _c(\"li\", {\n    staticClass: \"bkt-chat\",\n    \"class\": {\n      \"bkt-bg-red-lighter\": _vm.selectedType == \"monitoring\"\n    },\n    attrs: {\n      id: \"chat-4\"\n    },\n    on: {\n      click: function click($event) {\n        return _vm.setType(\"monitoring\");\n      }\n    }\n  }, [_c(\"div\", {\n    staticClass: \"bkt-chat__text\"\n  }, [_c(\"bkt-icon\", {\n    attrs: {\n      name: \"Target\",\n      color: \"red\",\n      width: \"15px\",\n      height: \"15px\"\n    }\n  }), _vm._v(\"\\n                                Мониторинг\\n                            \")], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"rounded-pill bkt-bg-red bkt-text-neutral-light\"\n  }, [_vm.notifications_count.monitoring > 0 ? _c(\"span\", {\n    staticClass: \"p-2\"\n  }, [_vm._v(\"\\n                                    \" + _vm._s(_vm.notifications_count.monitoring) + \"\\n                                \")]) : _vm._e()])])])])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"col-12 col-lg-9 bkt-gap-row-medium\"\n  }, [_c(\"div\", {\n    staticClass: \"bkt-wrapper-column bkt-gap-row-medium\"\n  }, [_c(\"div\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: !_vm.loading,\n      expression: \"!loading\"\n    }],\n    staticClass: \"bkt-wrapper-column bkt-gap-mini\"\n  }, _vm._l(_vm.items, function (message, index) {\n    return message ? _c(\"div\", {\n      key: index,\n      staticClass: \"bkt-message\",\n      \"class\": {\n        \"bkt-cursor-pointer\": message.type !== \"platform\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.navigate(message);\n        }\n      }\n    }, [_c(\"bkt-icon\", {\n      staticClass: \"bkt-message__check\",\n      attrs: {\n        name: \"Check\",\n        color: message.isSeen ? \"primary\" : \"main-lighter\",\n        width: \"15px\",\n        height: \"15px\"\n      }\n    }), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"d-md-none bkt-wrapper-between w-100\"\n    }, [_c(\"h6\", {\n      staticClass: \"bkt-message__date\"\n    }, [_vm._v(\"\\n                                    \" + _vm._s(_vm._f(\"moment\")(message.date, \"D MMMM YYYY\")) + \" в \" + _vm._s(_vm._f(\"moment\")(message.date, \"HH:mm\")) + \"\\n                                \")]), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"bkt-chat-content__info text-right\"\n    }, [_c(\"div\", {\n      staticClass: \"bkt-message__type\",\n      \"class\": {\n        \"bkt-bg-red-lighter bkt-text-red\": message.type == \"monitoring\",\n        \"bkt-bg-yellow-lighter bkt-text-yellow\": message.type == \"favourite\",\n        \"bkt-bg-green-lighter bkt-text-green\": message.type == \"platform\"\n      }\n    }, [_vm._v(\"\\n                                        \" + _vm._s(message.type == \"monitoring\" ? \"мониторинг\" : \"\") + \"\\n                                        \" + _vm._s(message.type == \"favourite\" ? \"избранное\" : \"\") + \"\\n                                        \" + _vm._s(message.type == \"platform\" ? \"сообщения платформы\" : \"\") + \"\\n                                    \")])])]), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"bkt-wrapper-column bkt-message__content\"\n    }, [_c(\"div\", {\n      staticClass: \"bkt-wrapper bkt-nowrap me-auto ms-0\"\n    }, [message.type == \"favourite\" ? _c(\"div\", {\n      staticClass: \"bkt-message__image-wrapper\"\n    }, [(!message.dataFavourite.photos || message.dataFavourite.photos.length == 0) && message.dataFavourite.categories && message.dataFavourite.categories.length > 0 ? _c(\"bkt-card-image-category\", {\n      attrs: {\n        no_multiple: true,\n        categories: message.dataFavourite.categories\n      }\n    }) : _vm._e(), _vm._v(\" \"), message.dataFavourite.photos && message.dataFavourite.photos.length > 0 ? _c(\"img\", {\n      staticClass: \"bkt-message__image\",\n      attrs: {\n        src: message.dataFavourite.photos[0].preview,\n        alt: \"\"\n      }\n    }) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"bkt-chat-content__text\"\n    }, [message.type == \"monitoring\" && message.dataMonitoring ? _c(\"div\", {\n      staticClass: \"bkt-badge mx-0 mb-2\",\n      \"class\": message.dataMonitoring.folderInfo.color ? \"bkt-bg-\" + message.dataMonitoring.folderInfo.color : \"bkt-bg-primary\"\n    }, [_vm._v(\"\\n                                            \" + _vm._s(message.dataMonitoring.folderInfo.name) + \"\\n                                        \")]) : _vm._e(), _vm._v(\" \"), message.type == \"monitoring\" ? _c(\"h5\", {\n      staticClass: \"bkt-message__text bkt-cursor-pointer\"\n    }, [_vm._v(\"\\n                                            Появились новые лоты в мониторинге:\\n                                            \" + _vm._s(message.dataMonitoring ? message.dataMonitoring.newLotCount : \"0\") + \"\\n                                        \")]) : _vm._e(), _vm._v(\" \"), message.type == \"platform\" && message.dataPlatform ? _c(\"h6\", {\n      staticClass: \"bkt-message__title\"\n    }, [_vm._v(\"\\n                                            \" + _vm._s(message.dataPlatform.label) + \"\\n                                        \")]) : _vm._e(), _vm._v(\" \"), message.type == \"platform\" ? _c(\"h5\", {\n      staticClass: \"bkt-message__text\"\n    }, [_vm._v(\"\\n                                            \" + _vm._s(message.dataPlatform ? message.dataPlatform.value : \"\") + \"\\n                                        \")]) : _vm._e(), _vm._v(\" \"), message.type == \"favourite\" && message.dataFavourite ? _c(\"h6\", {\n      staticClass: \"bkt-message__title bkt-card__title bkt-text-truncate bkt-arrow-after bkt-cursor-pointer\"\n    }, [_vm._v(\"\\n                                            \" + _vm._s(message.dataFavourite.description) + \"\\n                                        \")]) : _vm._e(), _vm._v(\" \"), message.type == \"favourite\" ? _c(\"h5\", {\n      staticClass: \"bkt-message__text\"\n    }, [_vm._v(\"\\n                                            \" + _vm._s(message.dataFavourite ? message.dataFavourite.detail : \"\") + \"\\n                                        \")]) : _vm._e()])]), _vm._v(\" \"), _c(\"h6\", {\n      staticClass: \"d-none d-md-block bkt-message__date\"\n    }, [_vm._v(\"\\n                                    \" + _vm._s(_vm._f(\"moment\")(message.date, \"D MMMM YYYY\")) + \" в \" + _vm._s(_vm._f(\"moment\")(message.date, \"HH:mm\")) + \"\\n                                \")])]), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"bkt-message__type d-none d-md-block\",\n      \"class\": {\n        \"bkt-bg-red-lighter bkt-text-red\": message.type == \"monitoring\",\n        \"bkt-bg-yellow-lighter bkt-text-yellow\": message.type == \"favourite\",\n        \"bkt-bg-green-lighter bkt-text-green\": message.type == \"platform\"\n      }\n    }, [_vm._v(\"\\n                                \" + _vm._s(message.type == \"monitoring\" ? \"мониторинг\" : \"\") + \"\\n                                \" + _vm._s(message.type == \"favourite\" ? \"избранное\" : \"\") + \"\\n                                \" + _vm._s(message.type == \"platform\" ? \"сообщения платформы\" : \"\") + \"\\n                            \")])], 1) : _vm._e();\n  }), 0), _vm._v(\" \"), _c(\"div\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.loading || _vm.type_loading,\n      expression: \"loading||type_loading\"\n    }],\n    staticClass: \"bkt-wrapper-column bkt-gap-mini\"\n  }, _vm._l(20, function (message, index) {\n    return _c(\"div\", {\n      key: index,\n      staticClass: \"bkt-message\"\n    }, [_c(\"skeleton\", {\n      attrs: {\n        width: \"15px\",\n        height: \"15px\",\n        skeleton_class: \"bkt-message__check\"\n      }\n    }), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"d-md-none bkt-wrapper-between w-100\"\n    }, [_c(\"skeleton\", {\n      attrs: {\n        skeleton_class: \"bkt-message__date mb-1\",\n        height: \"12px\"\n      }\n    }), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"bkt-chat-content__info text-right\"\n    }, [_c(\"skeleton\", {\n      attrs: {\n        skeleton_class: \"bkt-bkt-message__type\",\n        width: \"92px\"\n      }\n    })], 1)], 1), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"bkt-wrapper-column bkt-message__content\"\n    }, [_c(\"div\", {\n      staticClass: \"bkt-wrapper bkt-nowrap me-auto ms-0\"\n    }, [_c(\"div\", {\n      staticClass: \"bkt-message__image-wrapper\"\n    }, [_c(\"skeleton\", {\n      attrs: {\n        skeleton_class: \"bkt-message__image\"\n      }\n    })], 1), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"bkt-chat-content__text\"\n    }, [_c(\"skeleton\", {\n      attrs: {\n        height: \"14px\",\n        width: \"150px\",\n        skeleton_class: \"mb-1\"\n      }\n    }), _vm._v(\" \"), _c(\"skeleton\", {\n      attrs: {\n        height: \"12px\",\n        width: \"60%\"\n      }\n    })], 1)]), _vm._v(\" \"), _c(\"skeleton\", {\n      attrs: {\n        height: \"12px\",\n        skeleton_class: \"d-none d-md-block bkt-message__date\"\n      }\n    })], 1), _vm._v(\" \"), _c(\"skeleton\", {\n      attrs: {\n        skeleton_class: \"bkt-message__type d-none d-md-block\",\n        width: \"92px\"\n      }\n    })], 1);\n  }), 0), _vm._v(\" \"), _vm.pagination_data && !_vm.type_loading ? _c(\"bkt-pagination\", {\n    attrs: {\n      limit: 1,\n      data: _vm.pagination_data,\n      extraControls: false\n    },\n    on: {\n      \"change-page\": _vm.changePage\n    }\n  }) : _vm._e()], 1)])])])]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/Y2xvbmVkUnVsZVNldC01LnVzZVswXSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9yZXNvdXJjZXMvanMvcGFnZXMvTWVzc2FnZXMudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTUwNzc4NWQ1JnNjb3BlZD10cnVlIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBSUEsTUFBTSxHQUFHLFNBQVNBLE1BQU0sR0FBRztFQUM3QixJQUFJQyxHQUFHLEdBQUcsSUFBSTtJQUNaQyxFQUFFLEdBQUdELEdBQUcsQ0FBQ0UsS0FBSyxDQUFDRCxFQUFFO0VBQ25CLE9BQU9BLEVBQUUsQ0FBQyxLQUFLLEVBQUU7SUFBRUUsV0FBVyxFQUFFO0VBQXNDLENBQUMsRUFBRSxDQUN2RUYsRUFBRSxDQUFDLElBQUksRUFBRTtJQUFFRSxXQUFXLEVBQUU7RUFBa0IsQ0FBQyxFQUFFLENBQzNDSCxHQUFHLENBQUNJLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQyxDQUNwQyxDQUFDLEVBQ0ZKLEdBQUcsQ0FBQ0ksRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUNYSCxFQUFFLENBQUMsS0FBSyxFQUFFO0lBQUVFLFdBQVcsRUFBRTtFQUFjLENBQUMsRUFBRSxDQUN4Q0YsRUFBRSxDQUFDLEtBQUssRUFBRTtJQUFFSSxHQUFHLEVBQUUsVUFBVTtJQUFFRixXQUFXLEVBQUU7RUFBTSxDQUFDLEVBQUUsQ0FDakRGLEVBQUUsQ0FBQyxLQUFLLEVBQUU7SUFBRUUsV0FBVyxFQUFFO0VBQWtCLENBQUMsRUFBRSxDQUM1Q0YsRUFBRSxDQUFDLEtBQUssRUFBRTtJQUFFRSxXQUFXLEVBQUU7RUFBcUIsQ0FBQyxFQUFFLENBQy9DRixFQUFF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QUFFLENBQUMsR0FBRyxDQUFDLEVBQ1hKLEdBQUcsQ0FBQ3dELGVBQWUsSUFBSSxDQUFDeEQsR0FBRyxDQUFDc0QsWUFBWSxHQUNwQ3JELEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRTtJQUNuQk0sS0FBSyxFQUFFO01BQ0xrRCxLQUFLLEVBQUUsQ0FBQztNQUNSQyxJQUFJLEVBQUUxRCxHQUFHLENBQUN3RCxlQUFlO01BQ3pCRyxhQUFhLEVBQUU7SUFDakIsQ0FBQztJQUNEbEQsRUFBRSxFQUFFO01BQUUsYUFBYSxFQUFFVCxHQUFHLENBQUM0RDtJQUFXO0VBQ3RDLENBQUMsQ0FBQyxHQUNGNUQsR0FBRyxDQUFDZ0IsRUFBRSxFQUFFLENBQ2IsRUFDRCxDQUFDLENBQ0YsQ0FDRixDQUFDLENBQ0gsQ0FBQyxDQUNILENBQUMsQ0FDSCxDQUFDO0FBQ0osQ0FBQztBQUNELElBQUk2QyxlQUFlLEdBQUcsRUFBRTtBQUN4QjlELE1BQU0sQ0FBQytELGFBQWEsR0FBRyxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL3BhZ2VzL01lc3NhZ2VzLnZ1ZT8wMjc2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gIHZhciBfdm0gPSB0aGlzLFxuICAgIF9jID0gX3ZtLl9zZWxmLl9jXG4gIHJldHVybiBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImJrdC1tZXNzYWdlcyBia3QtcGFnZSBia3QtY29udGFpbmVyXCIgfSwgW1xuICAgIF9jKFwiaDFcIiwgeyBzdGF0aWNDbGFzczogXCJia3QtcGFnZV9fdGl0bGVcIiB9LCBbXG4gICAgICBfdm0uX3YoXCJcXG4gICAgICAgINCh0L7QvtCx0YnQtdC90LjRj1xcbiAgICBcIiksXG4gICAgXSksXG4gICAgX3ZtLl92KFwiIFwiKSxcbiAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImJrdC1jb250ZW50XCIgfSwgW1xuICAgICAgX2MoXCJkaXZcIiwgeyByZWY6IFwiY2FyZExpc3RcIiwgc3RhdGljQ2xhc3M6IFwicm93XCIgfSwgW1xuICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImNvbC0xMiBjb2wtbGctM1wiIH0sIFtcbiAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImJrdC1oaXN0b3J5X19jaGF0c1wiIH0sIFtcbiAgICAgICAgICAgIF9jKFwidWxcIiwgeyBzdGF0aWNDbGFzczogXCJsaXN0LXVuc3R5bGVkIHRleHQtbGVmdCBwdC00IHBiLTRcIiB9LCBbXG4gICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgIFwibGlcIixcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJia3QtY2hhdFwiLFxuICAgICAgICAgICAgICAgICAgY2xhc3M6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJia3QtYmctcHJpbWFyeS1saWdodGVyXCI6IF92bS5zZWxlY3RlZFR5cGUgPT0gXCJhbGxcIixcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogXCJjaGF0LTFcIiB9LFxuICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnNldFR5cGUoXCJhbGxcIilcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgINCS0YHQtVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6XG4gICAgICAgICAgICAgICAgICAgICAgICBcImJrdC1jaGF0X19udW0gcm91bmRlZC1waWxsIGJrdC1iZy1wcmltYXJ5IGJrdC10ZXh0LW5ldXRyYWwtbGlnaHRcIixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgIF92bS5ub3RpZmljYXRpb25zX2NvdW50LmFsbCA+IDBcbiAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoXCJzcGFuXCIsIHsgc3RhdGljQ2xhc3M6IFwicC0yXCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLm5vdGlmaWNhdGlvbnNfY291bnQuYWxsKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgXCJsaVwiLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImJrdC1jaGF0XCIsXG4gICAgICAgICAgICAgICAgICBjbGFzczoge1xuICAgICAgICAgICAgICAgICAgICBcImJrdC1iZy1ncmVlbi1saWdodGVyXCI6IF92bS5zZWxlY3RlZFR5cGUgPT0gXCJwbGF0Zm9ybVwiLFxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiBcImNoYXQtMlwiIH0sXG4gICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uc2V0VHlwZShcInBsYXRmb3JtXCIpXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiYmt0LWNoYXRfX3RleHRcIiB9LFxuICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgX2MoXCJia3QtaWNvblwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkJlbGxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IFwiZ3JlZW5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiMTVweFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IFwiMTVweFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg0KHQvtC+0LHRidC10L3QuNGPINC/0LvQsNGC0YTQvtGA0LzRi1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczpcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiYmt0LWNoYXRfX251bSByb3VuZGVkLXBpbGwgYmt0LWJnLWdyZWVuIGJrdC10ZXh0LW5ldXRyYWwtbGlnaHRcIixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgIF92bS5ub3RpZmljYXRpb25zX2NvdW50LnBsYXRmb3JtID4gMFxuICAgICAgICAgICAgICAgICAgICAgICAgPyBfYyhcInNwYW5cIiwgeyBzdGF0aWNDbGFzczogXCJwLTJcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0ubm90aWZpY2F0aW9uc19jb3VudC5wbGF0Zm9ybSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgIFwibGlcIixcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJia3QtY2hhdFwiLFxuICAgICAgICAgICAgICAgICAgY2xhc3M6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJia3QtYmcteWVsbG93LWxpZ2h0ZXJcIjogX3ZtLnNlbGVjdGVkVHlwZSA9PSBcImZhdm91cml0ZVwiLFxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiBcImNoYXQtM1wiIH0sXG4gICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uc2V0VHlwZShcImZhdm91cml0ZVwiKVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImJrdC1jaGF0X190ZXh0XCIgfSxcbiAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgIF9jKFwiYmt0LWljb25cIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJTdGFyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcInllbGxvd1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogXCIxNXB4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogXCIxNXB4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDQmNC30LHRgNCw0L3QvdC+0LVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6XG4gICAgICAgICAgICAgICAgICAgICAgICBcImJrdC1jaGF0X19udW0gcm91bmRlZC1waWxsIGJrdC1iZy15ZWxsb3cgYmt0LXRleHQtbmV1dHJhbC1saWdodFwiLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgX3ZtLm5vdGlmaWNhdGlvbnNfY291bnQuZmF2b3VyaXRlID4gMFxuICAgICAgICAgICAgICAgICAgICAgICAgPyBfYyhcInNwYW5cIiwgeyBzdGF0aWNDbGFzczogXCJwLTJcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0ubm90aWZpY2F0aW9uc19jb3VudC5mYXZvdXJpdGUpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICBcImxpXCIsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiYmt0LWNoYXRcIixcbiAgICAgICAgICAgICAgICAgIGNsYXNzOiB7XG4gICAgICAgICAgICAgICAgICAgIFwiYmt0LWJnLXJlZC1saWdodGVyXCI6IF92bS5zZWxlY3RlZFR5cGUgPT0gXCJtb25pdG9yaW5nXCIsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6IFwiY2hhdC00XCIgfSxcbiAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5zZXRUeXBlKFwibW9uaXRvcmluZ1wiKVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImJrdC1jaGF0X190ZXh0XCIgfSxcbiAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgIF9jKFwiYmt0LWljb25cIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJUYXJnZXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IFwicmVkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIjE1cHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBcIjE1cHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgINCc0L7QvdC40YLQvtGA0LjQvdCzXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOlxuICAgICAgICAgICAgICAgICAgICAgICAgXCJyb3VuZGVkLXBpbGwgYmt0LWJnLXJlZCBia3QtdGV4dC1uZXV0cmFsLWxpZ2h0XCIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICBfdm0ubm90aWZpY2F0aW9uc19jb3VudC5tb25pdG9yaW5nID4gMFxuICAgICAgICAgICAgICAgICAgICAgICAgPyBfYyhcInNwYW5cIiwgeyBzdGF0aWNDbGFzczogXCJwLTJcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0ubm90aWZpY2F0aW9uc19jb3VudC5tb25pdG9yaW5nKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgIF0pLFxuICAgICAgICBdKSxcbiAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJjb2wtMTIgY29sLWxnLTkgYmt0LWdhcC1yb3ctbWVkaXVtXCIgfSwgW1xuICAgICAgICAgIF9jKFxuICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiYmt0LXdyYXBwZXItY29sdW1uIGJrdC1nYXAtcm93LW1lZGl1bVwiIH0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzaG93XCIsXG4gICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LXNob3dcIixcbiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogIV92bS5sb2FkaW5nLFxuICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiIWxvYWRpbmdcIixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJia3Qtd3JhcHBlci1jb2x1bW4gYmt0LWdhcC1taW5pXCIsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLml0ZW1zLCBmdW5jdGlvbiAobWVzc2FnZSwgaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBtZXNzYWdlXG4gICAgICAgICAgICAgICAgICAgID8gX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IGluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJia3QtbWVzc2FnZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYmt0LWN1cnNvci1wb2ludGVyXCI6IG1lc3NhZ2UudHlwZSAhPT0gXCJwbGF0Zm9ybVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLm5hdmlnYXRlKG1lc3NhZ2UpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiYmt0LWljb25cIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImJrdC1tZXNzYWdlX19jaGVja1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkNoZWNrXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogbWVzc2FnZS5pc1NlZW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcInByaW1hcnlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwibWFpbi1saWdodGVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogXCIxNXB4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IFwiMTVweFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImQtbWQtbm9uZSBia3Qtd3JhcHBlci1iZXR3ZWVuIHctMTAwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImg2XCIsIHsgc3RhdGljQ2xhc3M6IFwiYmt0LW1lc3NhZ2VfX2RhdGVcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9mKFwibW9tZW50XCIpKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UuZGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIkQgTU1NTSBZWVlZXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiDQsiBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fZihcIm1vbWVudFwiKShtZXNzYWdlLmRhdGUsIFwiSEg6bW1cIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJia3QtY2hhdC1jb250ZW50X19pbmZvIHRleHQtcmlnaHRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiYmt0LW1lc3NhZ2VfX3R5cGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImJrdC1iZy1yZWQtbGlnaHRlciBia3QtdGV4dC1yZWRcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UudHlwZSA9PSBcIm1vbml0b3JpbmdcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImJrdC1iZy15ZWxsb3ctbGlnaHRlciBia3QtdGV4dC15ZWxsb3dcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UudHlwZSA9PSBcImZhdm91cml0ZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYmt0LWJnLWdyZWVuLWxpZ2h0ZXIgYmt0LXRleHQtZ3JlZW5cIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UudHlwZSA9PSBcInBsYXRmb3JtXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLnR5cGUgPT0gXCJtb25pdG9yaW5nXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFwi0LzQvtC90LjRgtC+0YDQuNC90LNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogXCJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UudHlwZSA9PSBcImZhdm91cml0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcItC40LfQsdGA0LDQvdC90L7QtVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcIlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZS50eXBlID09IFwicGxhdGZvcm1cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gXCLRgdC+0L7QsdGJ0LXQvdC40Y8g0L/Qu9Cw0YLRhNC+0YDQvNGLXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwiXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImJrdC13cmFwcGVyLWNvbHVtbiBia3QtbWVzc2FnZV9fY29udGVudFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYmt0LXdyYXBwZXIgYmt0LW5vd3JhcCBtZS1hdXRvIG1zLTBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UudHlwZSA9PSBcImZhdm91cml0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYmt0LW1lc3NhZ2VfX2ltYWdlLXdyYXBwZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICghbWVzc2FnZS5kYXRhRmF2b3VyaXRlLnBob3RvcyB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLmRhdGFGYXZvdXJpdGUucGhvdG9zXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmxlbmd0aCA9PSAwKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZS5kYXRhRmF2b3VyaXRlLmNhdGVnb3JpZXMgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UuZGF0YUZhdm91cml0ZS5jYXRlZ29yaWVzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoXCJia3QtY2FyZC1pbWFnZS1jYXRlZ29yeVwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub19tdWx0aXBsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcmllczpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLmRhdGFGYXZvdXJpdGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRlZ29yaWVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UuZGF0YUZhdm91cml0ZS5waG90b3MgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UuZGF0YUZhdm91cml0ZS5waG90b3MubGVuZ3RoID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFwiaW1nXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImJrdC1tZXNzYWdlX19pbWFnZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiBtZXNzYWdlLmRhdGFGYXZvdXJpdGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucGhvdG9zWzBdLnByZXZpZXcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdDogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiYmt0LWNoYXQtY29udGVudF9fdGV4dFwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UudHlwZSA9PSBcIm1vbml0b3JpbmdcIiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLmRhdGFNb25pdG9yaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJia3QtYmFkZ2UgbXgtMCBtYi0yXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IG1lc3NhZ2UuZGF0YU1vbml0b3JpbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5mb2xkZXJJbmZvLmNvbG9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFwiYmt0LWJnLVwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZS5kYXRhTW9uaXRvcmluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5mb2xkZXJJbmZvLmNvbG9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwiYmt0LWJnLXByaW1hcnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLmRhdGFNb25pdG9yaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZm9sZGVySW5mby5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLnR5cGUgPT0gXCJtb25pdG9yaW5nXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImg1XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYmt0LW1lc3NhZ2VfX3RleHQgYmt0LWN1cnNvci1wb2ludGVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg0J/QvtGP0LLQuNC70LjRgdGMINC90L7QstGL0LUg0LvQvtGC0Ysg0LIg0LzQvtC90LjRgtC+0YDQuNC90LPQtTpcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UuZGF0YU1vbml0b3JpbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gbWVzc2FnZS5kYXRhTW9uaXRvcmluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5uZXdMb3RDb3VudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcIjBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZS50eXBlID09IFwicGxhdGZvcm1cIiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLmRhdGFQbGF0Zm9ybVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaDZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImJrdC1tZXNzYWdlX190aXRsZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UuZGF0YVBsYXRmb3JtLmxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLnR5cGUgPT0gXCJwbGF0Zm9ybVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJoNVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiYmt0LW1lc3NhZ2VfX3RleHRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLmRhdGFQbGF0Zm9ybVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBtZXNzYWdlLmRhdGFQbGF0Zm9ybVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcIlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLnR5cGUgPT0gXCJmYXZvdXJpdGVcIiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLmRhdGFGYXZvdXJpdGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImg2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYmt0LW1lc3NhZ2VfX3RpdGxlIGJrdC1jYXJkX190aXRsZSBia3QtdGV4dC10cnVuY2F0ZSBia3QtYXJyb3ctYWZ0ZXIgYmt0LWN1cnNvci1wb2ludGVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZS5kYXRhRmF2b3VyaXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZGVzY3JpcHRpb25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UudHlwZSA9PSBcImZhdm91cml0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJoNVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiYmt0LW1lc3NhZ2VfX3RleHRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLmRhdGFGYXZvdXJpdGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gbWVzc2FnZS5kYXRhRmF2b3VyaXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmRldGFpbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcIlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaDZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkLW5vbmUgZC1tZC1ibG9jayBia3QtbWVzc2FnZV9fZGF0ZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2YoXCJtb21lbnRcIikoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLmRhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIkQgTU1NTSBZWVlZXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiDQsiBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2YoXCJtb21lbnRcIikobWVzc2FnZS5kYXRlLCBcIkhIOm1tXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJia3QtbWVzc2FnZV9fdHlwZSBkLW5vbmUgZC1tZC1ibG9ja1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJia3QtYmctcmVkLWxpZ2h0ZXIgYmt0LXRleHQtcmVkXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZS50eXBlID09IFwibW9uaXRvcmluZ1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImJrdC1iZy15ZWxsb3ctbGlnaHRlciBia3QtdGV4dC15ZWxsb3dcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLnR5cGUgPT0gXCJmYXZvdXJpdGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJia3QtYmctZ3JlZW4tbGlnaHRlciBia3QtdGV4dC1ncmVlblwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UudHlwZSA9PSBcInBsYXRmb3JtXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UudHlwZSA9PSBcIm1vbml0b3JpbmdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFwi0LzQvtC90LjRgtC+0YDQuNC90LNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwiXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UudHlwZSA9PSBcImZhdm91cml0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gXCLQuNC30LHRgNCw0L3QvdC+0LVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwiXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UudHlwZSA9PSBcInBsYXRmb3JtXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcItGB0L7QvtCx0YnQtdC90LjRjyDQv9C70LDRgtGE0L7RgNC80YtcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwiXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIDBcbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcInNob3dcIixcbiAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtc2hvd1wiLFxuICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ubG9hZGluZyB8fCBfdm0udHlwZV9sb2FkaW5nLFxuICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwibG9hZGluZ3x8dHlwZV9sb2FkaW5nXCIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiYmt0LXdyYXBwZXItY29sdW1uIGJrdC1nYXAtbWluaVwiLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgX3ZtLl9sKDIwLCBmdW5jdGlvbiAobWVzc2FnZSwgaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBfYyhcbiAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgeyBrZXk6IGluZGV4LCBzdGF0aWNDbGFzczogXCJia3QtbWVzc2FnZVwiIH0sXG4gICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICBfYyhcInNrZWxldG9uXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIjE1cHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBcIjE1cHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2tlbGV0b25fY2xhc3M6IFwiYmt0LW1lc3NhZ2VfX2NoZWNrXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJkLW1kLW5vbmUgYmt0LXdyYXBwZXItYmV0d2VlbiB3LTEwMFwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwic2tlbGV0b25cIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBza2VsZXRvbl9jbGFzczogXCJia3QtbWVzc2FnZV9fZGF0ZSBtYi0xXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IFwiMTJweFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImJrdC1jaGF0LWNvbnRlbnRfX2luZm8gdGV4dC1yaWdodFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJza2VsZXRvblwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2tlbGV0b25fY2xhc3M6IFwiYmt0LWJrdC1tZXNzYWdlX190eXBlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiOTJweFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYmt0LXdyYXBwZXItY29sdW1uIGJrdC1tZXNzYWdlX19jb250ZW50XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImJrdC13cmFwcGVyIGJrdC1ub3dyYXAgbWUtYXV0byBtcy0wXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJia3QtbWVzc2FnZV9faW1hZ2Utd3JhcHBlclwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcInNrZWxldG9uXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNrZWxldG9uX2NsYXNzOiBcImJrdC1tZXNzYWdlX19pbWFnZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJia3QtY2hhdC1jb250ZW50X190ZXh0XCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwic2tlbGV0b25cIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBcIjE0cHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiMTUwcHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2tlbGV0b25fY2xhc3M6IFwibWItMVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwic2tlbGV0b25cIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaGVpZ2h0OiBcIjEycHhcIiwgd2lkdGg6IFwiNjAlXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwic2tlbGV0b25cIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IFwiMTJweFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2tlbGV0b25fY2xhc3M6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZC1ub25lIGQtbWQtYmxvY2sgYmt0LW1lc3NhZ2VfX2RhdGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgIF9jKFwic2tlbGV0b25cIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2tlbGV0b25fY2xhc3M6IFwiYmt0LW1lc3NhZ2VfX3R5cGUgZC1ub25lIGQtbWQtYmxvY2tcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiOTJweFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIDBcbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgX3ZtLnBhZ2luYXRpb25fZGF0YSAmJiAhX3ZtLnR5cGVfbG9hZGluZ1xuICAgICAgICAgICAgICAgID8gX2MoXCJia3QtcGFnaW5hdGlvblwiLCB7XG4gICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgbGltaXQ6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgZGF0YTogX3ZtLnBhZ2luYXRpb25fZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICBleHRyYUNvbnRyb2xzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb246IHsgXCJjaGFuZ2UtcGFnZVwiOiBfdm0uY2hhbmdlUGFnZSB9LFxuICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIDFcbiAgICAgICAgICApLFxuICAgICAgICBdKSxcbiAgICAgIF0pLFxuICAgIF0pLFxuICBdKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSJdLCJuYW1lcyI6WyJyZW5kZXIiLCJfdm0iLCJfYyIsIl9zZWxmIiwic3RhdGljQ2xhc3MiLCJfdiIsInJlZiIsInNlbGVjdGVkVHlwZSIsImF0dHJzIiwiaWQiLCJvbiIsImNsaWNrIiwiJGV2ZW50Iiwic2V0VHlwZSIsIm5vdGlmaWNhdGlvbnNfY291bnQiLCJhbGwiLCJfcyIsIl9lIiwibmFtZSIsImNvbG9yIiwid2lkdGgiLCJoZWlnaHQiLCJwbGF0Zm9ybSIsImZhdm91cml0ZSIsIm1vbml0b3JpbmciLCJkaXJlY3RpdmVzIiwicmF3TmFtZSIsInZhbHVlIiwibG9hZGluZyIsImV4cHJlc3Npb24iLCJfbCIsIml0ZW1zIiwibWVzc2FnZSIsImluZGV4Iiwia2V5IiwidHlwZSIsIm5hdmlnYXRlIiwiaXNTZWVuIiwiX2YiLCJkYXRlIiwiZGF0YUZhdm91cml0ZSIsInBob3RvcyIsImxlbmd0aCIsImNhdGVnb3JpZXMiLCJub19tdWx0aXBsZSIsInNyYyIsInByZXZpZXciLCJhbHQiLCJkYXRhTW9uaXRvcmluZyIsImZvbGRlckluZm8iLCJuZXdMb3RDb3VudCIsImRhdGFQbGF0Zm9ybSIsImxhYmVsIiwiZGVzY3JpcHRpb24iLCJkZXRhaWwiLCJ0eXBlX2xvYWRpbmciLCJza2VsZXRvbl9jbGFzcyIsInBhZ2luYXRpb25fZGF0YSIsImxpbWl0IiwiZGF0YSIsImV4dHJhQ29udHJvbHMiLCJjaGFuZ2VQYWdlIiwic3RhdGljUmVuZGVyRm5zIiwiX3dpdGhTdHJpcHBlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/pages/Messages.vue?vue&type=template&id=507785d5&scoped=true\n");

/***/ }),

/***/ "./resources/js/pages/Messages.vue":
/*!*****************************************!*\
  !*** ./resources/js/pages/Messages.vue ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Messages_vue_vue_type_template_id_507785d5_scoped_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Messages.vue?vue&type=template&id=507785d5&scoped=true */ \"./resources/js/pages/Messages.vue?vue&type=template&id=507785d5&scoped=true\");\n/* harmony import */ var _Messages_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Messages.vue?vue&type=script&lang=js */ \"./resources/js/pages/Messages.vue?vue&type=script&lang=js\");\n/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _Messages_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _Messages_vue_vue_type_template_id_507785d5_scoped_true__WEBPACK_IMPORTED_MODULE_0__.render,\n  _Messages_vue_vue_type_template_id_507785d5_scoped_true__WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,\n  false,\n  null,\n  \"507785d5\",\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"resources/js/pages/Messages.vue\"\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcGFnZXMvTWVzc2FnZXMudnVlIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0c7QUFDdkM7QUFDTDs7O0FBR3REO0FBQ0EsQ0FBNkY7QUFDN0YsZ0JBQWdCLHVHQUFVO0FBQzFCLEVBQUUsNkVBQU07QUFDUixFQUFFLDJGQUFNO0FBQ1IsRUFBRSxvR0FBZTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxJQUFJLEtBQVUsRUFBRSxZQWlCZjtBQUNEO0FBQ0EsaUVBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvTWVzc2FnZXMudnVlP2Y0ZTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9NZXNzYWdlcy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NTA3Nzg1ZDUmc2NvcGVkPXRydWVcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9NZXNzYWdlcy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vTWVzc2FnZXMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjUwNzc4NWQ1XCIsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiRTpcXFxcT3BlblNlcnZlclxcXFxPU1BhbmVsXFxcXGRvbWFpbnNcXFxcYmFua3JvdFxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCc1MDc3ODVkNScpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCc1MDc3ODVkNScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCc1MDc3ODVkNScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vTWVzc2FnZXMudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTUwNzc4NWQ1JnNjb3BlZD10cnVlXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignNTA3Nzg1ZDUnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInJlc291cmNlcy9qcy9wYWdlcy9NZXNzYWdlcy52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/pages/Messages.vue\n");

/***/ }),

/***/ "./resources/js/pages/Messages.vue?vue&type=script&lang=js":
/*!*****************************************************************!*\
  !*** ./resources/js/pages/Messages.vue?vue&type=script&lang=js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Messages_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Messages.vue?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/pages/Messages.vue?vue&type=script&lang=js\");\n /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Messages_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcGFnZXMvTWVzc2FnZXMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFNLENBQUMsaUVBQWUsa01BQUcsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9wYWdlcy9NZXNzYWdlcy52dWU/Njk2NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9jbG9uZWRSdWxlU2V0LTUudXNlWzBdIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vTWVzc2FnZXMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P2Nsb25lZFJ1bGVTZXQtNS51c2VbMF0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9NZXNzYWdlcy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/pages/Messages.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./resources/js/pages/Messages.vue?vue&type=template&id=507785d5&scoped=true":
/*!***********************************************************************************!*\
  !*** ./resources/js/pages/Messages.vue?vue&type=template&id=507785d5&scoped=true ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   render: () => (/* reexport safe */ _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_use_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ruleSet_1_rules_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Messages_vue_vue_type_template_id_507785d5_scoped_true__WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   staticRenderFns: () => (/* reexport safe */ _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_use_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ruleSet_1_rules_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Messages_vue_vue_type_template_id_507785d5_scoped_true__WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_use_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ruleSet_1_rules_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Messages_vue_vue_type_template_id_507785d5_scoped_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Messages.vue?vue&type=template&id=507785d5&scoped=true */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/pages/Messages.vue?vue&type=template&id=507785d5&scoped=true");


/***/ })

}]);