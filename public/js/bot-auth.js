"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4553],{44605:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ AuthPage)\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/bot/AuthPage.vue?vue&type=template&id=5081738c&scoped=true\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("div", [_vm._m(0), _vm._v(" "), _c("ValidationObserver", {\n    ref: "observer",\n    staticClass: "modal-content bkt-modal-content",\n    attrs: {\n      tag: "div"\n    },\n    scopedSlots: _vm._u([{\n      key: "default",\n      fn: function fn(_ref) {\n        var invalid = _ref.invalid;\n        return [_vm.grantType === "email" ? _c("bkt-input", {\n          key: "e-mail",\n          attrs: {\n            name: "email",\n            type: "email",\n            label: "e-mail",\n            field_name: "\'e-mail\'",\n            rules: "required",\n            placeholder: "pochta@gmail.com",\n            icon_name: "Email"\n          },\n          model: {\n            value: _vm.user.email,\n            callback: function callback($$v) {\n              _vm.$set(_vm.user, "email", $$v);\n            },\n            expression: "user.email"\n          }\n        }) : _vm._e(), _vm._v(" "), _vm.grantType === "phone" ? _c("bkt-input", {\n          key: "phone",\n          attrs: {\n            name: "phone",\n            type: "tel",\n            label: "номер телефона",\n            rules: "required|phone",\n            placeholder: "+7 495 000-00-00",\n            icon_name: "Smartphone",\n            mask: ["+# ### ### ####", "+## ### ### ####", "+## ### #### ####"],\n            masked: false\n          },\n          model: {\n            value: _vm.user.phone,\n            callback: function callback($$v) {\n              _vm.$set(_vm.user, "phone", $$v);\n            },\n            expression: "user.phone"\n          }\n        }) : _vm._e(), _vm._v(" "), _c("bkt-select", {\n          attrs: {\n            name: "regions",\n            options: _vm.region_options,\n            label: "регион",\n            label_class: "bkt-input__label",\n            option_label: "label",\n            reduce: function reduce(option) {\n              return option.value;\n            },\n            method_name: "getRegions",\n            loading: _vm.regions_loading,\n            rules: "required"\n          },\n          model: {\n            value: _vm.user.region,\n            callback: function callback($$v) {\n              _vm.$set(_vm.user, "region", $$v);\n            },\n            expression: "user.region"\n          }\n        })];\n      }\n    }])\n  })], 1);\n};\nvar staticRenderFns = [function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("div", {\n    staticClass: "bkt-shadow-card__inner bkt-gap-large"\n  }, [_c("h4", {\n    staticClass: "bkt-shadow-card__title bkt-text-white"\n  }, [_vm._v("\\n                Давайте знакомиться!"), _c("br"), _vm._v(" "), _c("span", [_vm._v("Для новых друзей действует 30-ти дневный пробный период")])]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-shadow-card__shadow-1"\n  }), _vm._v(" "), _c("div", {\n    staticClass: "bkt-shadow-card__shadow-2"\n  })]);\n}];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/bot/AuthPage.vue?vue&type=template&id=5081738c&scoped=true\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/bot/AuthPage.vue?vue&type=script&lang=js\n/* harmony default export */ const AuthPagevue_type_script_lang_js = ({\n  name: "AuthPage",\n  data: function data() {\n    return {\n      grantType: \'email\',\n      loading: false,\n      user: {\n        region: null,\n        email: null,\n        phone: null\n      }\n    };\n  },\n  computed: {\n    region_options: function region_options() {\n      var _this = this;\n      var tmp = [].concat.apply([], this.$store.getters.regions.map(function (item) {\n        return item.regions;\n      }));\n      var result = [];\n      tmp.forEach(function (item) {\n        result.push({\n          label: _this.$t(\'regions.\' + item),\n          value: item\n        });\n      });\n      return result.sort(function (a, b) {\n        return a.label.localeCompare(b.label);\n      });\n    },\n    regions_loading: function regions_loading() {\n      return this.$store.getters.regions_loading;\n    }\n  },\n  methods: {\n    signIn: function signIn() {}\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/bot/AuthPage.vue?vue&type=script&lang=js\n /* harmony default export */ const bot_AuthPagevue_type_script_lang_js = (AuthPagevue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(14486);\n;// CONCATENATED MODULE: ./resources/js/bot/AuthPage.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.A)(\n  bot_AuthPagevue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "5081738c",\n  null\n  \n)\n\n/* harmony default export */ const AuthPage = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///44605\n')}}]);