"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4466],{49357:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ Agent)\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/pages/Agent.vue?vue&type=template&id=1e1ed283&scoped=true&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("div", {\n    staticClass: "container bkt-promo bkt-page bkt-container"\n  }, [_vm._m(0), _vm._v(" "), _c("section", [_c("h2", {\n    staticClass: "bkt-page__subtitle"\n  }, [_vm._v("Что это даёт?")]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-form row-cols-1 row-cols-md-2 row-cols-lg-5"\n  }, [_c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__profit-card h-100"\n  }, [_c("div", {\n    staticClass: "bkt-icon-frame-large bkt-bg-blue-lighter"\n  }, [_c("bkt-icon", {\n    staticClass: "bkt-icon-frame__item",\n    attrs: {\n      name: "LightBulb",\n      color: "blue"\n    }\n  })], 1), _vm._v(" "), _c("p", {\n    staticClass: "bkt-card__text my-auto my-md-0"\n  }, [_vm._v("Не нужно вникать в тонкости процесса торгов")])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__profit-card h-100"\n  }, [_c("div", {\n    staticClass: "bkt-icon-frame-large bkt-bg-green-lighter"\n  }, [_c("bkt-icon", {\n    staticClass: "bkt-icon-frame__item",\n    attrs: {\n      name: "Like",\n      color: "green"\n    }\n  })], 1), _vm._v(" "), _c("p", {\n    staticClass: "bkt-card__text my-auto my-md-0"\n  }, [_vm._v("\\n                            Обходится дешевле, чем покупка ЭЦП\\n                        ")])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__profit-card h-100"\n  }, [_c("div", {\n    staticClass: "bkt-icon-frame-large bkt-bg-yellow-lighter"\n  }, [_c("bkt-icon", {\n    staticClass: "bkt-icon-frame__item",\n    attrs: {\n      name: "Devices",\n      color: "yellow"\n    }\n  })], 1), _vm._v(" "), _c("p", {\n    staticClass: "bkt-card__text my-auto my-md-0"\n  }, [_vm._v("Не нужно изучать сервисы и площадки")])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__profit-card h-100"\n  }, [_c("div", {\n    staticClass: "bkt-icon-frame-large bkt-bg-pink-lighter"\n  }, [_c("bkt-icon", {\n    staticClass: "bkt-icon-frame__item",\n    attrs: {\n      name: "Clipboard",\n      color: "pink"\n    }\n  })], 1), _vm._v(" "), _c("p", {\n    staticClass: "bkt-card__text my-auto my-md-0"\n  }, [_vm._v("Гарантируем допуск к торгам")])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__profit-card h-100"\n  }, [_c("div", {\n    staticClass: "bkt-icon-frame-large bkt-bg-red-lighter"\n  }, [_c("bkt-icon", {\n    staticClass: "bkt-icon-frame__item",\n    attrs: {\n      name: "Clock",\n      color: "red"\n    }\n  })], 1), _vm._v(" "), _c("p", {\n    staticClass: "bkt-card__text my-auto my-md-0"\n  }, [_vm._v("Экономим вам время и силы")])])])])]), _vm._v(" "), _vm._m(1), _vm._v(" "), _vm._m(2), _vm._v(" "), _vm._m(3)]);\n};\nvar staticRenderFns = [function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("section", [_c("h1", {\n    staticClass: "bkt-page__title"\n  }, [_vm._v("Покупка без ЭЦП через Лотофонд")]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-promo__block-wrapper"\n  }, [_c("div", {\n    staticClass: "bkt-promo__block bkt-promo__block_agent"\n  }, [_c("div", {\n    staticClass: "bkt-promo__block-body"\n  }, [_c("h1", {\n    staticClass: "bkt-promo__block-title"\n  }, [_vm._v("Новичок?"), _c("br"), _c("span", {\n    staticClass: "bkt-text-yellow"\n  }, [_vm._v("сэкономьте до 50%")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-promo__block-subtitle"\n  }, [_vm._v("на торгах с нашей помощью")]), _vm._v(" "), _c("h4", {\n    staticClass: "bkt-promo__block-text"\n  }, [_vm._v("\\n                            Воспользуйтесь нашим опытом побед, чтобы избежать ошибок и сэкономить время, деньги и\\n                            нервы.\\n                        ")])]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-promo__block-body"\n  }, [_c("div", {\n    staticClass: "bkt-promo__block-body-column"\n  }, [_c("div", {\n    staticClass: "bkt-promo__block-feature"\n  }, [_c("div", {\n    staticClass: "check_mark bkt-bg-pink"\n  }, [_vm._v("✓")]), _vm._v(" "), _c("span", [_vm._v("ЭЦП не нужна")])]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-promo__block-feature"\n  }, [_c("div", {\n    staticClass: "check_mark bkt-bg-blue"\n  }, [_vm._v("✓")]), _vm._v(" "), _c("span", [_vm._v("Аккредитация не нужна")])]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-promo__block-feature"\n  }, [_c("div", {\n    staticClass: "check_mark bkt-bg-green"\n  }, [_vm._v("✓")]), _vm._v(" "), _c("span", [_vm._v("Заполнять документы не нужно")])])])]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-promo__block-price"\n  })]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-promo__block-shadow",\n    staticStyle: {\n      "background-color": "rgba(13, 110, 255, 0.4)",\n      "z-index": "-1",\n      top: "-5px",\n      width: "calc(100% - 5vw)"\n    }\n  }), _vm._v(" "), _c("div", {\n    staticClass: "bkt-promo__block-shadow",\n    staticStyle: {\n      "background-color": "rgba(13, 110, 255, 0.2)",\n      "z-index": "-2",\n      top: "-5px",\n      width: "calc(100% - 10vw)"\n    }\n  })])]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("section", [_c("h2", {\n    staticClass: "bkt-page__subtitle"\n  }, [_vm._v("Что делаем мы?")]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-form bkt-container row-cols-1 row-cols-md-5 row-cols-lg-5"\n  }, [_c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__action-card"\n  }, [_c("div", {\n    staticClass: "plus-wrapper"\n  }, [_c("div", {\n    staticClass: "plus"\n  }, [_vm._v("\\n                                +\\n                            ")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Проводим анализ лота")]), _vm._v(" "), _c("div", {\n    staticClass: "number"\n  }, [_c("span", [_vm._v("01")])])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__action-card"\n  }, [_c("div", {\n    staticClass: "plus-wrapper"\n  }, [_c("div", {\n    staticClass: "plus"\n  }, [_vm._v("\\n                                +\\n                            ")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Выезжаем на место для получения доп. информации*"), _c("br"), _vm._v(" "), _c("span", {\n    staticClass: "bkt-card__subtitle"\n  }, [_vm._v("*По Москве и Московской области")])]), _vm._v(" "), _c("div", {\n    staticClass: "number"\n  }, [_c("span", [_vm._v("02")])])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__action-card"\n  }, [_c("div", {\n    staticClass: "plus-wrapper"\n  }, [_c("div", {\n    staticClass: "plus"\n  }, [_vm._v("\\n                                +\\n                            ")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Даём шаблоны документов по торгам")]), _vm._v(" "), _c("div", {\n    staticClass: "number"\n  }, [_c("span", [_vm._v("03")])])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__action-card"\n  }, [_c("div", {\n    staticClass: "plus-wrapper"\n  }, [_c("div", {\n    staticClass: "plus"\n  }, [_vm._v("\\n                                +\\n                            ")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Участвуем в торгах от вашего имени")]), _vm._v(" "), _c("div", {\n    staticClass: "number"\n  }, [_c("span", [_vm._v("04")])])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__action-card"\n  }, [_c("div", {\n    staticClass: "plus-wrapper"\n  }, [_c("div", {\n    staticClass: "plus"\n  }, [_vm._v("\\n                                +\\n                            ")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Контролируем оплату и возврат задатка")]), _vm._v(" "), _c("div", {\n    staticClass: "number"\n  }, [_c("span", [_vm._v("05")])])])])])]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("section", [_c("h2", {\n    staticClass: "bkt-page__subtitle"\n  }, [_vm._v("Что от вас?")]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-form bkt-container pe-0 justify-content-center row-cols-1 row-cols-md-2 row-cols-lg-4"\n  }, [_c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__todo-card-wrapper h-100"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__todo-card h-100"\n  }, [_c("div", {\n    staticClass: "check-wrapper"\n  }, [_c("div", {\n    staticClass: "check_mark"\n  }, [_vm._v("✓")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Выбрать интересующий лот или обозначить пожелания")])])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__todo-card-wrapper h-100"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__todo-card h-100"\n  }, [_c("div", {\n    staticClass: "check-wrapper"\n  }, [_c("div", {\n    staticClass: "check_mark"\n  }, [_vm._v("✓")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Оплатить услугу")])])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__todo-card-wrapper h-100"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__todo-card h-100"\n  }, [_c("div", {\n    staticClass: "check-wrapper"\n  }, [_c("div", {\n    staticClass: "check_mark"\n  }, [_vm._v("✓")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Заполнить шаблоны документов для участия")])])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__todo-card-wrapper h-100"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__todo-card h-100"\n  }, [_c("div", {\n    staticClass: "check-wrapper"\n  }, [_c("div", {\n    staticClass: "check_mark"\n  }, [_vm._v("✓")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Вовремя внести задаток")])])])])])]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("div", {\n    staticClass: "bkt-promo__block_mini"\n  }, [_c("h2", {\n    staticClass: "bkt-promo__block-title"\n  }, [_vm._v("С нами "), _c("span", {\n    staticClass: "bkt-text-yellow"\n  }, [_vm._v("шансы на победу")]), _vm._v(" в торгах\\n                увеличиваются до\\n            ")]), _c("span", {\n    staticClass: "bkt-promo__block-title bkt-text-yellow bkt-promo__block-percentage"\n  }, [_vm._v("80%")])]);\n}];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/pages/Agent.vue?vue&type=template&id=1e1ed283&scoped=true&\n\n// EXTERNAL MODULE: ./resources/js/components/CardImageCategory.vue + 4 modules\nvar CardImageCategory = __webpack_require__(20443);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/pages/Agent.vue?vue&type=script&lang=js&\n\n/* harmony default export */ const Agentvue_type_script_lang_js_ = ({\n  name: "Agent",\n  components: {\n    CardImageCategory: CardImageCategory/* default */.Z\n  },\n  data: function data() {\n    return {\n      loading: false,\n      service: {\n        name: \'\',\n        email: \'\',\n        phone: \'\',\n        socialsForAnswer: [],\n        dateForCallback: \'\',\n        paymentTradingTypes: [\'purchaseBidByAgent\'],\n        terms: false\n      }\n    };\n  },\n  computed: {\n    selected_lot: function selected_lot() {\n      return this.$store.getters.selected_lot;\n    }\n  },\n  methods: {\n    sendApplication: function sendApplication() {\n      var _this = this;\n      this.loading = true;\n      var data = JSON.parse(JSON.stringify(this.service));\n      // data.socialsForAnswer = [this.service.socialsForAnswer];\n      axios.post(\'/api/send/application\', data).then(function (resp) {\n        _this.loading = false;\n        _this.$store.dispatch(\'sendNotification\', {\n          self: _this,\n          message: \'Заявка на услугу успешно отправлена менеджеру\'\n        });\n      })["catch"](function (error) {\n        _this.loading = false;\n      });\n    },\n    scrollToElement: function scrollToElement() {\n      var el = this.$refs.form;\n      if (el) {\n        el.scrollIntoView({\n          block: \'start\',\n          scrollBehavior: \'smooth\'\n        });\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/pages/Agent.vue?vue&type=script&lang=js&\n /* harmony default export */ const pages_Agentvue_type_script_lang_js_ = (Agentvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(51900);\n;// CONCATENATED MODULE: ./resources/js/pages/Agent.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  pages_Agentvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "1e1ed283",\n  null\n  \n)\n\n/* harmony default export */ const Agent = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///49357\n')}}]);