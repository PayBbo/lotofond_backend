"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4466],{6229:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ Agent)\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/pages/Agent.vue?vue&type=template&id=f3931e90&scoped=true&\nvar render = function render() {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c("div", {\n    staticClass: "container bkt-promo bkt-page bkt-container"\n  }, [_c("section", [_c("h1", {\n    staticClass: "bkt-page__title"\n  }, [_vm._v("Покупка без ЭЦП через Лотофонд")]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-promo__block-wrapper"\n  }, [_c("div", {\n    staticClass: "bkt-promo__block bkt-promo__block_agent"\n  }, [_vm._m(0), _vm._v(" "), _vm._m(1), _vm._v(" "), _c("div", {\n    staticClass: "bkt-promo__block-price"\n  }, [_c("h2", [_vm._v("3000 ₽")]), _vm._v(" "), _c("button", {\n    staticClass: "bkt-button bkt-button_yellow bkt-button_plump",\n    on: {\n      click: _vm.scrollToElement\n    }\n  }, [_vm._v("Купить\\n                    ")])])]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-promo__block-shadow",\n    staticStyle: {\n      "background-color": "rgba(13, 110, 255, 0.4)",\n      "z-index": "-1",\n      top: "-5px",\n      width: "calc(100% - 5vw)"\n    }\n  }), _vm._v(" "), _c("div", {\n    staticClass: "bkt-promo__block-shadow",\n    staticStyle: {\n      "background-color": "rgba(13, 110, 255, 0.2)",\n      "z-index": "-2",\n      top: "-5px",\n      width: "calc(100% - 10vw)"\n    }\n  })])]), _vm._v(" "), _c("section", [_c("h2", {\n    staticClass: "bkt-page__subtitle"\n  }, [_vm._v("Что это даёт?")]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-form row-cols-1 row-cols-md-2 row-cols-lg-5"\n  }, [_c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__profit-card h-100"\n  }, [_c("div", {\n    staticClass: "bkt-icon-frame-large bkt-bg-blue-lighter"\n  }, [_c("bkt-icon", {\n    staticClass: "bkt-icon-frame__item",\n    attrs: {\n      name: "LightBulb",\n      color: "blue"\n    }\n  })], 1), _vm._v(" "), _c("p", {\n    staticClass: "bkt-card__text my-auto my-md-0"\n  }, [_vm._v("Не нужно вникать в тонкости процесса торгов")])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__profit-card h-100"\n  }, [_c("div", {\n    staticClass: "bkt-icon-frame-large bkt-bg-green-lighter"\n  }, [_c("bkt-icon", {\n    staticClass: "bkt-icon-frame__item",\n    attrs: {\n      name: "Like",\n      color: "green"\n    }\n  })], 1), _vm._v(" "), _c("p", {\n    staticClass: "bkt-card__text my-auto my-md-0"\n  }, [_vm._v("\\n                        Обходится дешевле, чем покупка ЭЦП\\n                    ")])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__profit-card h-100"\n  }, [_c("div", {\n    staticClass: "bkt-icon-frame-large bkt-bg-yellow-lighter"\n  }, [_c("bkt-icon", {\n    staticClass: "bkt-icon-frame__item",\n    attrs: {\n      name: "Devices",\n      color: "yellow"\n    }\n  })], 1), _vm._v(" "), _c("p", {\n    staticClass: "bkt-card__text my-auto my-md-0"\n  }, [_vm._v("Не нужно изучать сервисы и площадки")])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__profit-card h-100"\n  }, [_c("div", {\n    staticClass: "bkt-icon-frame-large bkt-bg-pink-lighter"\n  }, [_c("bkt-icon", {\n    staticClass: "bkt-icon-frame__item",\n    attrs: {\n      name: "Clipboard",\n      color: "pink"\n    }\n  })], 1), _vm._v(" "), _c("p", {\n    staticClass: "bkt-card__text my-auto my-md-0"\n  }, [_vm._v("Гарантируем допуск к торгам")])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__profit-card h-100"\n  }, [_c("div", {\n    staticClass: "bkt-icon-frame-large bkt-bg-red-lighter"\n  }, [_c("bkt-icon", {\n    staticClass: "bkt-icon-frame__item",\n    attrs: {\n      name: "Clock",\n      color: "red"\n    }\n  })], 1), _vm._v(" "), _c("p", {\n    staticClass: "bkt-card__text my-auto my-md-0"\n  }, [_vm._v("Экономим вам время и силы")])])])])]), _vm._v(" "), _vm._m(2), _vm._v(" "), _vm._m(3), _vm._v(" "), _vm._m(4), _vm._v(" "), _c("section", {\n    ref: "form"\n  }, [_c("h2", {\n    staticClass: "bkt-page__subtitle"\n  }, [_vm._v("Как получить услугу?")]), _vm._v(" "), _c("ValidationObserver", {\n    staticClass: "bkt-card bkt-promo__form bkt-form",\n    attrs: {\n      tag: "div"\n    },\n    scopedSlots: _vm._u([{\n      key: "default",\n      fn: function fn(_ref) {\n        var invalid = _ref.invalid;\n        return [_vm.selected_lot ? _c("div", {\n          staticClass: "bkt-promo__lot-wrapper"\n        }, [_c("label", {\n          staticClass: "bkt-input__label bkt-form__label"\n        }, [_vm._v("\\n                    лот\\n                ")]), _vm._v(" "), _c("div", {\n          staticClass: "bkt-wrapper bkt-gap bkt-nowrap"\n        }, [(!_vm.selected_lot.photos || _vm.selected_lot.photos.length == 0) && _vm.selected_lot && _vm.selected_lot.categories ? _c("card-image-category", {\n          attrs: {\n            no_multiple: true,\n            categories: _vm.selected_lot.categories\n          }\n        }) : _vm._e(), _vm._v(" "), _vm.selected_lot.photos.length > 0 ? _c("img", {\n          directives: [{\n            name: "lazy",\n            rawName: "v-lazy",\n            value: _vm.selected_lot.photos[0].preview,\n            expression: "selected_lot.photos[0].preview"\n          }],\n          staticClass: "bkt-card__image"\n        }) : _vm._e(), _vm._v(" "), _c("router-link", {\n          attrs: {\n            to: "/lot/" + _vm.selected_lot.id\n          }\n        }, [_c("h4", {\n          staticClass: "bkt-promo__lot-title bkt-text-truncate bkt-cursor-pointer"\n        }, [_vm._v("\\n                            " + _vm._s(_vm.selected_lot.description) + "\\n                        ")])])], 1)]) : _vm._e(), _vm._v(" "), _c("bkt-input", {\n          attrs: {\n            name: "name",\n            type: "text",\n            rules: "required|alpha_spaces|min:2",\n            label: "имя фамилия <span class=\'bkt-text-red\'>*</span>",\n            label_class: "bkt-form__label",\n            field_name: "Имя Фамилия",\n            placeholder: "Иванов Иван",\n            icon_name: "User"\n          },\n          model: {\n            value: _vm.service.name,\n            callback: function callback($$v) {\n              _vm.$set(_vm.service, "name", $$v);\n            },\n            expression: "service.name"\n          }\n        }), _vm._v(" "), _c("bkt-input", {\n          attrs: {\n            name: "email",\n            type: "email",\n            label: "email <span class=\'bkt-text-red\'>*</span>",\n            label_class: "bkt-form__label",\n            field_name: "Email",\n            rules: "required",\n            placeholder: "pochta@gmail.com",\n            icon_name: "Email"\n          },\n          model: {\n            value: _vm.service.email,\n            callback: function callback($$v) {\n              _vm.$set(_vm.service, "email", $$v);\n            },\n            expression: "service.email"\n          }\n        }), _vm._v(" "), _c("bkt-input", {\n          attrs: {\n            name: "phone",\n            type: "tel",\n            label: "номер телефона <span class=\'bkt-text-red\'>*</span>",\n            label_class: "bkt-form__label",\n            field_name: "Номер телефона",\n            rules: "required|phone",\n            placeholder: "+7 495 000-00-00",\n            icon_name: "Smartphone",\n            mask: ["+# ### ### ####", "+## ### ### ####", "+## ### #### ####"]\n          },\n          model: {\n            value: _vm.service.phone,\n            callback: function callback($$v) {\n              _vm.$set(_vm.service, "phone", $$v);\n            },\n            expression: "service.phone"\n          }\n        }), _vm._v(" "), _c("div", {\n          staticClass: "bkt-input__wrapper"\n        }, [_c("label", {\n          staticClass: "bkt-input__label bkt-form__label",\n          staticStyle: {\n            "margin-bottom": "10px"\n          }\n        }, [_vm._v("\\n                    где вам удобнее общаться "), _c("span", {\n          staticClass: "bkt-text-red"\n        }, [_vm._v("*")])]), _vm._v(" "), _c("ValidationProvider", {\n          attrs: {\n            name: "Мессенджеры",\n            rules: "required|min:1"\n          },\n          scopedSlots: _vm._u([{\n            key: "default",\n            fn: function fn(_ref2) {\n              var errors = _ref2.errors;\n              return [_c("div", {\n                staticClass: "communications"\n              }, [_c("bkt-checkbox", {\n                attrs: {\n                  wrapper_class: "flex-fill",\n                  input_class: "bkt-button bkt-bg-body flex-fill",\n                  name: "Viber",\n                  val: "Viber",\n                  border_color: _vm.service.socialsForAnswer.includes("Viber") ? "primary" : "body"\n                },\n                scopedSlots: _vm._u([{\n                  key: "input-check",\n                  fn: function fn() {\n                    return [_c("bkt-icon", {\n                      staticClass: "bkt-button__icon",\n                      attrs: {\n                        name: "Viber",\n                        color: "purple"\n                      }\n                    })];\n                  },\n                  proxy: true\n                }], null, true),\n                model: {\n                  value: _vm.service.socialsForAnswer,\n                  callback: function callback($$v) {\n                    _vm.$set(_vm.service, "socialsForAnswer", $$v);\n                  },\n                  expression: "service.socialsForAnswer"\n                }\n              }), _vm._v(" "), _c("bkt-checkbox", {\n                attrs: {\n                  wrapper_class: "flex-fill",\n                  input_class: "bkt-button bkt-bg-body flex-fill",\n                  name: "Vk",\n                  val: "Vk",\n                  border_color: _vm.service.socialsForAnswer.includes("Vk") ? "primary" : "body"\n                },\n                scopedSlots: _vm._u([{\n                  key: "input-check",\n                  fn: function fn() {\n                    return [_c("bkt-icon", {\n                      staticClass: "bkt-button__icon",\n                      attrs: {\n                        name: "Vk",\n                        color: "primary"\n                      }\n                    })];\n                  },\n                  proxy: true\n                }], null, true),\n                model: {\n                  value: _vm.service.socialsForAnswer,\n                  callback: function callback($$v) {\n                    _vm.$set(_vm.service, "socialsForAnswer", $$v);\n                  },\n                  expression: "service.socialsForAnswer"\n                }\n              }), _vm._v(" "), _c("bkt-checkbox", {\n                attrs: {\n                  wrapper_class: "flex-fill",\n                  input_class: "bkt-button bkt-bg-body flex-fill",\n                  name: "Telegram",\n                  val: "Telegram",\n                  border_color: _vm.service.socialsForAnswer.includes("Telegram") ? "primary" : "body"\n                },\n                scopedSlots: _vm._u([{\n                  key: "input-check",\n                  fn: function fn() {\n                    return [_c("bkt-icon", {\n                      staticClass: "bkt-button__icon",\n                      attrs: {\n                        name: "Telegram",\n                        color: "blue"\n                      }\n                    })];\n                  },\n                  proxy: true\n                }], null, true),\n                model: {\n                  value: _vm.service.socialsForAnswer,\n                  callback: function callback($$v) {\n                    _vm.$set(_vm.service, "socialsForAnswer", $$v);\n                  },\n                  expression: "service.socialsForAnswer"\n                }\n              }), _vm._v(" "), _c("bkt-checkbox", {\n                attrs: {\n                  wrapper_class: "flex-fill",\n                  input_class: "bkt-button bkt-bg-body flex-fill",\n                  name: "WhatsApp",\n                  val: "WhatsApp",\n                  border_color: _vm.service.socialsForAnswer.includes("WhatsApp") ? "primary" : "body"\n                },\n                scopedSlots: _vm._u([{\n                  key: "input-check",\n                  fn: function fn() {\n                    return [_c("bkt-icon", {\n                      staticClass: "bkt-button__icon",\n                      attrs: {\n                        name: "WhatsApp",\n                        color: "green"\n                      }\n                    })];\n                  },\n                  proxy: true\n                }], null, true),\n                model: {\n                  value: _vm.service.socialsForAnswer,\n                  callback: function callback($$v) {\n                    _vm.$set(_vm.service, "socialsForAnswer", $$v);\n                  },\n                  expression: "service.socialsForAnswer"\n                }\n              }), _vm._v(" "), _c("div", {\n                staticClass: "bkt-button bkt-bg-body bkt-text-main"\n              }, [_vm._v("перезвоним в течение 10 минут")])], 1), _vm._v(" "), errors.length > 0 ? _c("p", {\n                staticClass: "bkt-input-error"\n              }, [_vm._v(_vm._s(errors[0]))]) : _vm._e()];\n            }\n          }], null, true)\n        })], 1), _vm._v(" "), _c("div", {\n          staticClass: "bkt-input__wrapper"\n        }, [_c("label", {\n          staticClass: "bkt-form__label"\n        }, [_vm._v("\\n                    позвоните лучше\\n                ")]), _vm._v(" "), _c("div", {\n          staticClass: "time_to_call"\n        }, [_c("bkt-datepicker", {\n          attrs: {\n            type: "datetime",\n            name: "dateForCallback",\n            field_name: "\'позвоните лучше\'"\n          },\n          model: {\n            value: _vm.service.dateForCallback,\n            callback: function callback($$v) {\n              _vm.$set(_vm.service, "dateForCallback", $$v);\n            },\n            expression: "service.dateForCallback"\n          }\n        })], 1)]), _vm._v(" "), _c("bkt-checkbox", {\n          attrs: {\n            name: "\'Условия\'",\n            id: "terms",\n            rules: "required_boolean"\n          },\n          scopedSlots: _vm._u([{\n            key: "label",\n            fn: function fn() {\n              return [_vm._v("\\n                    Согласен с условиями пользовательского соглашения, политики сайта, обработки персональных\\n                    данных. "), _c("span", {\n                staticClass: "bkt-text-red",\n                staticStyle: {\n                  "font-size": "14px"\n                }\n              }, [_vm._v("*")])];\n            },\n            proxy: true\n          }], null, true),\n          model: {\n            value: _vm.service.terms,\n            callback: function callback($$v) {\n              _vm.$set(_vm.service, "terms", $$v);\n            },\n            expression: "service.terms"\n          }\n        }), _vm._v(" "), _c("button", {\n          staticClass: "bkt-button primary",\n          attrs: {\n            disabled: invalid || _vm.loading\n          },\n          on: {\n            click: _vm.sendApplication\n          }\n        }, [_vm._v("\\n                Получить услугу\\n            ")])];\n      }\n    }])\n  })], 1)]);\n};\n\nvar staticRenderFns = [function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c("div", {\n    staticClass: "bkt-promo__block-body"\n  }, [_c("h1", {\n    staticClass: "bkt-promo__block-title"\n  }, [_vm._v("Новичок?"), _c("br"), _c("span", {\n    staticClass: "bkt-text-yellow"\n  }, [_vm._v("сэкономьте до 50%")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-promo__block-subtitle"\n  }, [_vm._v("на торгах с нашей помощью")]), _vm._v(" "), _c("h4", {\n    staticClass: "bkt-promo__block-text"\n  }, [_vm._v("\\n                        Воспользуйтесь нашим опытом побед, чтобы избежать ошибок и сэкономить время, деньги и\\n                        нервы.\\n                    ")])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c("div", {\n    staticClass: "bkt-promo__block-body"\n  }, [_c("div", {\n    staticClass: "bkt-promo__block-body-column"\n  }, [_c("div", {\n    staticClass: "bkt-promo__block-feature"\n  }, [_c("div", {\n    staticClass: "check_mark bkt-bg-pink"\n  }, [_vm._v("✓")]), _vm._v(" "), _c("span", [_vm._v("ЭЦП не нужна")])]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-promo__block-feature"\n  }, [_c("div", {\n    staticClass: "check_mark bkt-bg-blue"\n  }, [_vm._v("✓")]), _vm._v(" "), _c("span", [_vm._v("Аккредитация не нужна")])]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-promo__block-feature"\n  }, [_c("div", {\n    staticClass: "check_mark bkt-bg-green"\n  }, [_vm._v("✓")]), _vm._v(" "), _c("span", [_vm._v("Заполнять документы не нужно")])])])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c("section", [_c("h2", {\n    staticClass: "bkt-page__subtitle"\n  }, [_vm._v("Что делаем мы?")]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-form bkt-container row-cols-1 row-cols-md-5 row-cols-lg-5"\n  }, [_c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__action-card"\n  }, [_c("div", {\n    staticClass: "plus-wrapper"\n  }, [_c("div", {\n    staticClass: "plus"\n  }, [_vm._v("\\n                            +\\n                        ")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Проводим анализ лота")]), _vm._v(" "), _c("div", {\n    staticClass: "number"\n  }, [_c("span", [_vm._v("01")])])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__action-card"\n  }, [_c("div", {\n    staticClass: "plus-wrapper"\n  }, [_c("div", {\n    staticClass: "plus"\n  }, [_vm._v("\\n                            +\\n                        ")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Выезжаем на место для получения доп. информации*"), _c("br"), _vm._v(" "), _c("span", {\n    staticClass: "bkt-card__subtitle"\n  }, [_vm._v("*По Москве и Московской области")])]), _vm._v(" "), _c("div", {\n    staticClass: "number"\n  }, [_c("span", [_vm._v("02")])])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__action-card"\n  }, [_c("div", {\n    staticClass: "plus-wrapper"\n  }, [_c("div", {\n    staticClass: "plus"\n  }, [_vm._v("\\n                            +\\n                        ")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Даём шаблоны документов по торгам")]), _vm._v(" "), _c("div", {\n    staticClass: "number"\n  }, [_c("span", [_vm._v("03")])])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__action-card"\n  }, [_c("div", {\n    staticClass: "plus-wrapper"\n  }, [_c("div", {\n    staticClass: "plus"\n  }, [_vm._v("\\n                            +\\n                        ")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Участвуем в торгах от вашего имени")]), _vm._v(" "), _c("div", {\n    staticClass: "number"\n  }, [_c("span", [_vm._v("04")])])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__action-card"\n  }, [_c("div", {\n    staticClass: "plus-wrapper"\n  }, [_c("div", {\n    staticClass: "plus"\n  }, [_vm._v("\\n                            +\\n                        ")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Контролируем оплату и возврат задатка")]), _vm._v(" "), _c("div", {\n    staticClass: "number"\n  }, [_c("span", [_vm._v("05")])])])])])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c("section", [_c("h2", {\n    staticClass: "bkt-page__subtitle"\n  }, [_vm._v("Что от вас?")]), _vm._v(" "), _c("div", {\n    staticClass: "bkt-form bkt-container pe-0 justify-content-center row-cols-1 row-cols-md-2 row-cols-lg-4"\n  }, [_c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__todo-card-wrapper h-100"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__todo-card h-100"\n  }, [_c("div", {\n    staticClass: "check-wrapper"\n  }, [_c("div", {\n    staticClass: "check_mark"\n  }, [_vm._v("✓")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Выбрать интересующий лот или обозначить пожелания")])])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__todo-card-wrapper h-100"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__todo-card h-100"\n  }, [_c("div", {\n    staticClass: "check-wrapper"\n  }, [_c("div", {\n    staticClass: "check_mark"\n  }, [_vm._v("✓")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Оплатить услугу")])])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__todo-card-wrapper h-100"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__todo-card h-100"\n  }, [_c("div", {\n    staticClass: "check-wrapper"\n  }, [_c("div", {\n    staticClass: "check_mark"\n  }, [_vm._v("✓")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Заполнить шаблоны документов для участия")])])])]), _vm._v(" "), _c("div", {\n    staticClass: "col"\n  }, [_c("div", {\n    staticClass: "bkt-promo__todo-card-wrapper h-100"\n  }, [_c("div", {\n    staticClass: "bkt-card bkt-promo__todo-card h-100"\n  }, [_c("div", {\n    staticClass: "check-wrapper"\n  }, [_c("div", {\n    staticClass: "check_mark"\n  }, [_vm._v("✓")])]), _vm._v(" "), _c("h5", {\n    staticClass: "bkt-card__text"\n  }, [_vm._v("Вовремя внести задаток")])])])])])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c("div", {\n    staticClass: "bkt-promo__block_mini"\n  }, [_c("h2", {\n    staticClass: "bkt-promo__block-title"\n  }, [_vm._v("С нами "), _c("span", {\n    staticClass: "bkt-text-yellow"\n  }, [_vm._v("шансы на победу")]), _vm._v(" в торгах\\n            увеличиваются до\\n        ")]), _c("span", {\n    staticClass: "bkt-promo__block-title bkt-text-yellow bkt-promo__block-percentage"\n  }, [_vm._v("80%")])]);\n}];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/pages/Agent.vue?vue&type=template&id=f3931e90&scoped=true&\n\n// EXTERNAL MODULE: ./resources/js/components/CardImageCategory.vue + 4 modules\nvar CardImageCategory = __webpack_require__(7674);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/pages/Agent.vue?vue&type=script&lang=js&\n\n/* harmony default export */ const Agentvue_type_script_lang_js_ = ({\n  name: "Agent",\n  components: {\n    CardImageCategory: CardImageCategory/* default */.Z\n  },\n  data: function data() {\n    return {\n      loading: false,\n      service: {\n        name: \'\',\n        email: \'\',\n        phone: \'\',\n        socialsForAnswer: [],\n        dateForCallback: \'\',\n        terms: false\n      }\n    };\n  },\n  computed: {\n    selected_lot: function selected_lot() {\n      return this.$store.getters.selected_lot;\n    }\n  },\n  methods: {\n    sendApplication: function sendApplication() {\n      var _this = this;\n\n      this.loading = true;\n      var data = JSON.parse(JSON.stringify(this.service)); // data.socialsForAnswer = [this.service.socialsForAnswer];\n\n      axios.post(\'/api/send/application\', data).then(function (resp) {\n        _this.loading = false;\n\n        _this.$store.dispatch(\'sendNotification\', {\n          self: _this,\n          message: \'Заявка на услугу успешно отправлена менеджеру\'\n        });\n      })["catch"](function (error) {\n        _this.loading = false;\n      });\n    },\n    scrollToElement: function scrollToElement() {\n      var el = this.$refs.form;\n\n      if (el) {\n        el.scrollIntoView({\n          block: \'start\',\n          scrollBehavior: \'smooth\'\n        });\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/pages/Agent.vue?vue&type=script&lang=js&\n /* harmony default export */ const pages_Agentvue_type_script_lang_js_ = (Agentvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/pages/Agent.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  pages_Agentvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "f3931e90",\n  null\n  \n)\n\n/* harmony default export */ const Agent = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6229\n')}}]);