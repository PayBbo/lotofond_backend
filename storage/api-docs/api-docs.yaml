openapi: 3.0.0
info:
  title: 'BankrotMP API'
  version: 1.0.0
servers:
  - url: /api
paths:
   /registration:
    post:
      parameters:
        - name: Content-Language
          in: header
          description: Заголовок для определения локали
          required: true
      tags:
        - Registration
      summary: 'Регистрация пользователя'
      operationId: register
      requestBody:
        description: 'Pass user credentials'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
            examples:
              email:
                value:
                  grantType: email
                  email: test@gmail.com
                  password: ne6Jo$zi
                  name: Ivan
                  surname: Ivanov
              phone:
                value:
                  grantType: phone
                  phoneNumber: '74951239999'
                  password: LRn&z!4Y
                  name: Ivan
                  surname: Ivanov
      responses:
        "422":
          description: 'Wrong credentials response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "200":
          description: 'Successful response, verification code sent to user'
        "550":
          description: 'Message can''t be sent to user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
   /registration/code:
     post:
       parameters:
         - name: Content-Language
           in: header
           description: Заголовок для определения локали
           required: true
       tags:
         - Registration
       summary: 'Запрос повторной отправки кода подтверждения аккаунта'
       operationId: requestRegistrationCode
       requestBody:
         description: 'User email'
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/ResetPasswordCodeRequest'
             examples:
               email:
                 value:
                   grantType: email
                   email: test@gmail.com
               phone:
                 value:
                   grantType: phone
                   phoneNumber: '74951239999'
       responses:
         "422":
           description: 'Wrong email response'
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
         "200":
           description: 'Successful response, verification code sent to user'
         "550":
           description: 'Message can''t be sent to user'
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'

   /registration/code/verify:
     post:
       parameters:
         - name: Content-Language
           in: header
           description: Заголовок для определения локали
           required: true
       tags:
         - Registration
       summary: 'Отправка кода для завершения регистрации'
       operationId: verifyRegistrationCode
       requestBody:
         description: Код подтверждения
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/CodeRequest'
             examples:
               email:
                 value:
                   grantType: email
                   email: test@gmail.com
                   code: 111111
               phone:
                 value:
                   grantType: phone
                   phoneNumber: '74951239999'
                   code: 111111
       responses:
         "200":
           description: Данные аккаунта
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/TokenData'
         default:
           description: unexpected error
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
   /login:
     post:
       parameters:
         - name: Content-Language
           in: header
           description: Заголовок для определения локали
           required: true
       tags:
         - Login
       summary: Вход пользователя
       operationId: login
       requestBody:
         description: Данные для авторизации
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Auth'
             examples:
               email:
                 value:
                   grantType: email
                   email: test@gmail.com
                   password: ne6Jo$zi
               phone:
                 value:
                   grantType: phone
                   phoneNumber: '74951239999'
                   password: LRn&z!4Y
         required: true
       responses:
         "200":
           description: Данные аккаунта
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/TokenData'
         default:
           description: unexpected error
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
   /account/password/code:
     parameters:
       - name: Content-Language
         in: header
         description: Заголовок для определения локали
         required: true
     post:
       tags:
         - Account
       summary: Запрос кода подтверждения для сброса пароля
       operationId: getResetPasswordCode
       requestBody:
         description: Почта или номер телефона пользователя
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/ResetPasswordCodeRequest'
             examples:
               email:
                 value:
                   grantType: email
                   email: test@gmail.com
               phone:
                 value:
                   grantType: phone
                   phoneNumber: '74951239999'
         required: true
       responses:
         "422":
           description: 'Wrong credentials response'
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
         "200":
           description: 'Successful response, code sent to user '
         "550":
           description: 'Message can''t be sent to user'
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
   /account/password/code/verify:
     parameters:
       - name: Content-Language
         in: header
         description: Заголовок для определения локали
         required: true
     post:
       tags:
         - Account
       summary: Отправка пользователем кода подтверждения для сброса пароля
       operationId: verifyResetPasswordCode
       requestBody:
         description: Код подтверждения
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/CodeRequest'
             examples:
               email:
                 value:
                   grantType: email
                   email: test@gmail.com
                   code: '123451'
               phone:
                 value:
                   grantType: phone
                   phoneNumber: '74951239999'
                   code: '123451'
         required: true
       responses:
         "422":
           description: 'Wrong credentials response'
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
         "200":
           description: 'Successful response'
   /account/password/reset:
     parameters:
       - name: Content-Language
         in: header
         description: Заголовок для определения локали
         required: true
     post:
       tags:
         - Account
       summary: Сброс пароля пользователя
       operationId: resetPassword
       requestBody:
         description: Данные для сброса пароля
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/ResetPasswordRequest'
             examples:
               email:
                 value:
                   grantType: email
                   email: test@gmail.com
                   password: bc7$etyZ
                   code: '123451'
               phone:
                 value:
                   grantType: phone
                   phoneNumber: '74951239999'
                   password: bc7$etyZ
                   code: '123451'
         required: true
       responses:
         "200":
           description: Данные аккаунта
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/TokenData'
         default:
           description: unexpected error
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
   /account/user/update:
     parameters:
       - name: Content-Language
         in: header
         description: Заголовок для определения локали
         required: true
     put:
       tags:
         - Account
       summary: Обновление информации об аккаунте
       operationId: updateUser
       requestBody:
         description: Информация об аккаунте пользователя
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/User'
         required: true
       responses:
         "422":
           description: 'Wrong credentials response'
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
         "200":
           description: 'Successful response'
       security:
         - bearerAuth: []
   /account/user:
     get:
       tags:
         - Account
       summary: Получение информации об аккаунте пользователя
       operationId: getUser
       responses:
         "200":
           description: Информация об аккаунте пользователя
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/User'
         default:
           description: unexpected error
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
       security:
         - bearerAuth: []
   /account/logout:
     get:
       tags:
         - Account
       summary: Выход пользователя из аккаунта
       operationId: logout
       responses:
         "200":
           description: Выход прошел успешно
         default:
           description: unexpected error
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
       security:
         - bearerAuth: []
   /trades:
     get:
       parameters:
         - in: query
           name: page
           schema:
             type: integer
           required: true
           description: Номер страницы для серверной пагинации
       tags:
         - Trades
       summary: Получение информации о торгах
       operationId: getTrades
       responses:
         "200":
           description: Информация о 20 последних торгах
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Trade'
         default:
           description: unexpected error
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
   /trades/{auctionId}:
     get:
       parameters:
         - in: query
           name: page
           schema:
             type: integer
           required: true
           description: Номер страницы для серверной пагинации
         - in: path
           name: auctionId
           schema:
             type: integer
           required: true
           description: Айдишник торга, все лоты которого нужно получить
       tags:
         - Trades
       summary: Получение информации о лотах выбранного торга
       operationId: getLotsByAuction
       responses:
         "200":
           description: Информация о 20 лотах выбранного торга
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Trade'
         "404":
           description: Торг по переданному айдишнику не найден
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
         default:
           description: unexpected error
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
   /trades/lot/{lotId}:
     get:
       parameters:
         - in: path
           name: lotId
           schema:
             type: integer
           required: true
           description: Айдишник лота, информацию о котором нужно получить
       tags:
         - Trades
       summary: Получение информации о лоте
       operationId: getLotInformation
       responses:
         "200":
           description: Информация о лоте
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Lot'
         "404":
           description: Лот по переданному айдишнику не найден
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
         default:
           description: unexpected error
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
   /trades/lot/action:
     put:
       tags:
         - Trades
       summary: Добавление/удаление лота в/из "просмотрено", "скрыто", "закреплено"
       operationId: actionWithLot
       requestBody:
         description: 'Pass user credentials'
         required: true
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/ActionWithLot'
             examples:
              Add/delete to/from seen:
                 value:
                   type: seen
                   lot_id: 1
              Add/delete to/from fixed:
                value:
                  type: fixed
                  lot_id: 1
              Add/delete to/from hidden:
                value:
                  type: hidden
                  lot_id: 1
       responses:
         "200":
           description: Лот успешно добавлен/удален в/из "просмотрено", "скрыто", "закреплено"
         "404":
           description: Лот по переданному айдишнику не найден
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
         default:
           description: unexpected error
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
       security:
         - bearerAuth: []

components:
  schemas:
    Register:
      required:
        - grantType
        - surname
        - name
      type: object
      properties:
        grantType:
          type: string
          description: Тип данных для регистрации
          enum:
            - email
            - phone
        phone:
          type: string
          description: Номер телефона пользователя
          example: '79225551234'
        email:
          type: string
          description: Email пользователя
          example: 'user@user.user1'
        password:
          type: string
          description: Пароль пользователя
          example: 'qwerty12'
        name:
          type: string
          example: Ivan
        surname:
          type: string
          example: Ivanov
    Auth:
      required:
        - grantType
      type: object
      properties:
        grantType:
          type: string
          description: Тип авторизационных данных
          enum:
            - email
            - phone
        phone:
          type: string
          description: Номер телефона пользователя
        email:
          type: string
          description: Email пользователя
        password:
          type: string
          description: Пароль пользователя
    ResetPasswordCodeRequest:
      required:
        - grantType
      type: object
      properties:
        grantType:
          type: string
          description: Тип данных для восстановления пароля
          enum:
            - email
            - phone
        phone:
          type: string
          description: Номер телефона пользователя
        email:
          type: string
          description: Email пользователя
    CodeRequest:
      required:
        - code
        - grantType
      type: object
      properties:
        grantType:
          type: string
        email:
          type: string
        phone:
          type: string
        code:
          type: string
    ResetPasswordRequest:
      required:
        - code
        - grantType
        - password
      type: object
      properties:
        grantType:
          type: string
        email:
          type: string
        phone:
          type: string
        password:
          type: string
        code:
          type: string
    TokenData:
      required:
        - accessToken
        - expiresIn
        - refreshToken
      type: object
      properties:
        accessToken:
          type: string
        expiresIn:
          type: integer
          format: int64
        refreshToken:
          type: string
    User:
      required:
        - name
        - surname
        - email
        - phone
      type: object
      properties:
        name:
          type: string
          example: Ivan
        lastname:
          type: string
          example: Ivanovich
        surname:
          type: string
          example: Ivanov
        email:
          type: string
          format: email
          example: user1@mail.com
        phone:
          type: string
          example: '79225551234'
    Trade:
      type: object
      properties:
        auctionId:
          type: integer
          description: айди торга
        lotId:
          type: integer
          description: айди лота
        isWatched:
          type: boolean
          description: Просмотрено/не просмотрено
        categories:
          type: object
          description: Объект с классификатороми
          example: {
            "realEstate": [
              "residentialProperty",
              "land"
            ],
          }
        isPinned:
          type: boolean
          description:  закреплен/не закреплен
        inFavourite:
          type: boolean
          description: в избранном/нет
        isHide:
          type: boolean
          description: скрыт/не скрыт
        label:
          type: string
          description: Заголовок/название (часть обрезанного описания)
        date:
          type: string
          description: дата/время занесения на федресурс (объявление о торгах)
        state:
          type: string
          description: статус лота
        tradingNumber:
          type: string
          description: номер торгов
        lotNumber:
          type: string
          description: номер лота
        photos:
          type: array
          description: массив фоток
          example: [
            {"preview": "http://127.0.0.1:8000/storage/auction-files/auction-695/previews/IMG-20220209-WA0009.jpg",
            "main":"http://127.0.0.1:8000/storage/auction-files/auction-695/IMG-20220209-WA0009.jpg"},
            { "preview": "http://127.0.0.1:8000/storage/auction-files/auction-695/previews/IMG-20220209-WA0009.jpg",
              "main": "http://127.0.0.1:8000/storage/auction-files/auction-695/IMG-20220209-WA0009.jpg" },
          ]
        geoPosition:
          type: string
          description: геометка
        numberOfLots:
          type: integer
          description: количество лотов в торгах
        price:
          type: integer
          description: цена
        priceState:
          type: string
          description: состояние цены (енам рост равно убыль)
        tags:
          type: array
          description: список меток
        inMonitoring:
          type: boolean
          description: в мониторинг/нет
        auctionStep:
          type: integer
          description: Значение шага аукциона, может быть NULL
        isAuctionStepRub:
          type: boolean
          description: если true - auctionStep в рублях, если false - auctionStep в процентах
        deposit:
          type: integer
          description:  Значение задатка, может быть NULL
        isDepositRub:
          type: boolean
          description: если true - deposit в рублях, если false - deposit в процентах

    Lot:
      type: object
      properties:
        auctionId:
          type: integer
          description: айди торга
        lotId:
          type: integer
          description: айди лота
        isWatched:
          type: boolean
          description: Просмотрено/не просмотрено
        categories:
          type: object
          description: Объект с классификатороми
          example: {
            "realEstate": [
              "residentialProperty",
              "land"
            ],
          }
        isPinned:
          type: boolean
          description:  закреплен/не закреплен
        inFavourite:
          type: boolean
          description: в избранном/нет
        isHide:
          type: boolean
          description: скрыт/не скрыт
        label:
          type: string
          description: Заголовок/название (часть обрезанного описания)
        date:
          type: string
          description: дата/время занесения на федресурс (объявление о торгах)
        state:
          type: string
          description: статус лота
        tradingNumber:
          type: string
          description: номер торгов
        lotNumber:
          type: string
          description: номер лота
        photos:
          type: array
          description: массив фоток
          example: [
            {"preview": "http://127.0.0.1:8000/storage/auction-files/auction-695/previews/IMG-20220209-WA0009.jpg",
             "main":"http://127.0.0.1:8000/storage/auction-files/auction-695/IMG-20220209-WA0009.jpg"},
            { "preview": "http://127.0.0.1:8000/storage/auction-files/auction-695/previews/IMG-20220209-WA0009.jpg",
              "main": "http://127.0.0.1:8000/storage/auction-files/auction-695/IMG-20220209-WA0009.jpg" },
          ]
        geoPosition:
          type: string
          description: геометка
        numberOfLots:
          type: integer
          description: количество лотов в торгах
        price:
          type: integer
          description: цена
        priceState:
          type: string
          description: состояние цены (енам рост равно убыль)
        tags:
          type: array
          description: список меток
        inMonitoring:
          type: boolean
          description: в мониторинг/нет
        auctionStep:
          type: integer
          description: Значение шага аукциона, может быть NULL
        isAuctionStepRub:
          type: boolean
          description: если true - auctionStep в рублях, если false - auctionStep в процентах
        deposit:
          type: integer
          description:  Значение задатка, может быть NULL
        isDepositRub:
          type: boolean
          description: если true - deposit в рублях, если false - deposit в процентах
        auctionType:
          type: string
          description: тип аукциона
        eventStart:
          type: string
          description: дата начала торгов
        eventEnd:
          type: string
          description: дата окончания торгов
        applicationStart:
          type: string
          description: дата начала приема заявок
        applicationEnd:
          type: string
          description: дата окончания приема заявок
        resultDate:
          type: string
          description: дата объявления результата  торгах
        tradePlaceName:
          type: string
          description: название ЭТП
        tradePlaceSite:
          type: string
          description: сайт ЭТП
        arbitrManagerName:
          type: string
          description: имя арбитражного управляющего
        arbitrManagerID:
          type: integer
          description: айдишник арбитражного управляющего
        tradeOrganizerID:
          type: integer
          description: айдишник организатора торгов
        tradeOrganizerINN:
          type: integer
          description: инн организатора торгов
        tradeOrganizerName:
          type: string
          description: имя организатора торгов
        debtorID:
          type: integer
          description: айдишник должника
    Notification:
      required:
        - value
        - date
      type: object
      properties:
        value:
          type: string
          description: текст уведомления
        date:
          type: string
          description: дата уведомления
    Debtor:
      required:
        - name
        - address
        - region
      type: object
      properties:
        name:
          type: string
          description: ФИО должника (физ.лица) или короткое название организации (юр. лица)
        inn:
          type: string
          description: ИНН (может быть нулевым)
        region:
          type: string
        address:
          type: string
        caseNumber:
          type: string
          description: номер судебного дела
        court:
          type: string
          description: суд
    ArbitrManager:
      required:
        - name
        - inn
      type: object
      properties:
        name:
          type: string
        inn:
          type: string
        sro:
          type: string
          description: название СРО
        sroINN:
          type: string
          description: ИНН СРО
        sroRegNum:
          type: string
          description: регистрационный номер СРО
    Error:
      required:
        - code
        - detail
        - title
      type: object
      properties:
        code:
          type: integer
          format: int32
        title:
          type: string
        detail:
          type: string
    ActionWithLot:
      required:
        - lot_id
        - type
      type: object
      properties:
        lot_id:
          type: integer
          description: Айдишник лота, который нужно добавить/удалить в/из "просмотрено", "скрыто", "закреплено"
        type:
          type: string
          enum:
            - seen
            - hidden
            - fixed
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
