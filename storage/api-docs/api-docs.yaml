openapi: 3.0.0
info:
  title: 'BankrotMP API'
  version: 1.0.0
servers:
  - url: /api
paths:
  /registration:
    post:
      parameters:
        - name: Content-Language
          in: header
          description: Заголовок для определения локали (ru, en, zh_CN)
          required: true
      tags:
        - Registration
      summary: 'Регистрация пользователя'
      operationId: register
      requestBody:
        description: 'Pass user credentials'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
            examples:
              email:
                value:
                  grantType: email
                  email: test@gmail.com
                  password: ne6Jo$zi
                  name: Ivan
                  surname: Ivanov
              phone:
                value:
                  grantType: phone
                  phone: '74951239999'
                  password: LRn&z!4Y
                  name: Ivan
                  surname: Ivanov
      responses:
        "422":
          description: 'Wrong credentials response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "200":
          description: 'Successful response, verification code sent to user'
        "550":
          description: 'Message can''t be sent to user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /registration/code:
    post:
      parameters:
        - name: Content-Language
          in: header
          description: Заголовок для определения локали (ru, en, zh_CN)
          required: true
      tags:
        - Registration
      summary: 'Запрос повторной отправки кода подтверждения аккаунта'
      operationId: requestRegistrationCode
      requestBody:
        description: 'User email'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordCodeRequest'
            examples:
              email:
                value:
                  grantType: email
                  email: test@gmail.com
              phone:
                value:
                  grantType: phone
                  phone: '74951239999'
      responses:
        "422":
          description: 'Wrong email response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "200":
          description: 'Successful response, verification code sent to user'
        "550":
          description: 'Message can''t be sent to user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /registration/code/verify:
    post:
      parameters:
        - name: Content-Language
          in: header
          description: Заголовок для определения локали (ru, en, zh_CN)
          required: true
      tags:
        - Registration
      summary: 'Отправка кода для завершения регистрации'
      operationId: verifyRegistrationCode
      requestBody:
        description: Код подтверждения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeRequest'
            examples:
              email:
                value:
                  grantType: email
                  email: test@gmail.com
                  code: 111111
              phone:
                value:
                  grantType: phone
                  phone: '74951239999'
                  code: 111111
      responses:
        "200":
          description: Данные аккаунта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenData'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /login:
    post:
      parameters:
        - name: Content-Language
          in: header
          description: Заголовок для определения локали (ru, en, zh_CN)
          required: true
      tags:
        - Login
      summary: Вход пользователя
      operationId: login
      requestBody:
        description: Данные для авторизации
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
            examples:
              email:
                value:
                  grantType: email
                  email: test@gmail.com
                  password: ne6Jo$zi
              phone:
                value:
                  grantType: phone
                  phone: '74951239999'
                  password: LRn&z!4Y
        required: true
      responses:
        "200":
          description: Данные аккаунта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenData'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /account/password/code:
    parameters:
      - name: Content-Language
        in: header
        description: Заголовок для определения локали (ru, en, zh_CN)
        required: true
    post:
      tags:
        - Account
      summary: Запрос кода подтверждения для сброса пароля
      operationId: getResetPasswordCode
      requestBody:
        description: Почта или номер телефона пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordCodeRequest'
            examples:
              email:
                value:
                  grantType: email
                  email: test@gmail.com
              phone:
                value:
                  grantType: phone
                  phone: '74951239999'
        required: true
      responses:
        "422":
          description: 'Wrong credentials response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "200":
          description: 'Successful response, code sent to user '
        "550":
          description: 'Message can''t be sent to user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /account/password/code/verify:
    parameters:
      - name: Content-Language
        in: header
        description: Заголовок для определения локали (ru, en, zh_CN)
        required: true
    post:
      tags:
        - Account
      summary: Отправка пользователем кода подтверждения для сброса пароля
      operationId: verifyResetPasswordCode
      requestBody:
        description: Код подтверждения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeRequest'
            examples:
              email:
                value:
                  grantType: email
                  email: test@gmail.com
                  code: '123451'
              phone:
                value:
                  grantType: phone
                  phone: '74951239999'
                  code: '123451'
        required: true
      responses:
        "422":
          description: 'Wrong credentials response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "200":
          description: 'Successful response'
  /account/password/reset:
    parameters:
      - name: Content-Language
        in: header
        description: Заголовок для определения локали (ru, en, zh_CN)
        required: true
    post:
      tags:
        - Account
      summary: Сброс пароля пользователя
      operationId: resetPassword
      requestBody:
        description: Данные для сброса пароля
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
            examples:
              email:
                value:
                  grantType: email
                  email: test@gmail.com
                  password: bc7$etyZ
                  code: '123451'
              phone:
                value:
                  grantType: phone
                  phone: '74951239999'
                  password: bc7$etyZ
                  code: '123451'
        required: true
      responses:
        "200":
          description: Данные аккаунта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenData'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /account/user/update:
    parameters:
      - name: Content-Language
        in: header
        description: Заголовок для определения локали (ru, en, zh_CN)
        required: true
    put:
      tags:
        - Account
      summary: Обновление информации об аккаунте
      operationId: updateUser
      requestBody:
        description: Информация об аккаунте пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "422":
          description: 'Wrong credentials response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "200":
          description: 'Successful response'
      security:
        - bearerAuth: [ ]
  /account/user:
    get:
      tags:
        - Account
      summary: Получение информации об аккаунте пользователя
      operationId: getUser
      responses:
        "200":
          description: Информация об аккаунте пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: [ ]
  /account/logout:
    get:
      tags:
        - Account
      summary: Выход пользователя из аккаунта
      operationId: logout
      responses:
        "200":
          description: Выход прошел успешно
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: [ ]
  /trades:
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: Номер страницы для серверной пагинации
      tags:
        - Trades
      summary: Получение информации о торгах
      operationId: getTrades
      responses:
        "200":
          description: Информация о 20 последних торгах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeInfo'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trades/filter:
    put:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: Номер страницы для серверной пагинации
      tags:
        - Trades
      summary: Получение информации о торгах в соответствии с фильтрами
      operationId: getFilteredTrades
      requestBody:
        description: Данные о выбранных фитрах
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filters'
        required: true
      responses:
        "200":
          description: Информация о 20 торгах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeInfo'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trades/{auctionId}:
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: Номер страницы для серверной пагинации
        - in: path
          name: auctionId
          schema:
            type: integer
          required: true
          description: Айдишник торга, все лоты которого нужно получить
      tags:
        - Trades
      summary: Получение информации о лотах выбранного торга
      operationId: getLotsByAuction
      responses:
        "200":
          description: Информация о 20 лотах выбранного торга
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeInfo'
        "404":
          description: Торг по переданному айдишнику не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trades/filter/bidders/{type}:
    get:
      parameters:
        - in: path
          name: type
          schema:
            type: string
            enum:
              - debtor
              - organizer
              - arbitrManager
          required: true
          description: Роль участников торгов, которых нужно получить для фильтрации
      tags:
        - Trades
      summary: Получение информации о должниках/организаторах торгов/арбитражных управляющих для отображения в фильтрах
      operationId: getBiddersForFilter
      responses:
        "200":
          description: Информация о должнике/организаторе торгов/арбитражном управляющем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BidderInfo'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trades/lot/{lotId}:
    get:
      parameters:
        - in: path
          name: lotId
          schema:
            type: integer
          required: true
          description: Айдишник лота, информацию о котором нужно получить
      tags:
        - Trades
      summary: Получение информации о лоте
      operationId: getLotInformation
      responses:
        "200":
          description: Информация о лоте
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lot'
        "404":
          description: Лот по переданному айдишнику не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trades/lot/action:
    put:
      tags:
        - Trades
      summary: Добавление/удаление лота в/из "просмотрено", "скрыто", "закреплено"
      operationId: actionWithLot
      requestBody:
        description: 'Pass user credentials'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionWithLot'
            examples:
              Add/delete to/from seen:
                value:
                  type: seen
                  lot_id: 1
              Add/delete to/from fixed:
                value:
                  type: fixed
                  lot_id: 1
              Add/delete to/from hidden:
                value:
                  type: hidden
                  lot_id: 1
      responses:
        "200":
          description: Лот успешно добавлен/удален в/из "просмотрено", "скрыто", "закреплено"
        "404":
          description: Лот по переданному айдишнику не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: [ ]

components:
  schemas:
    Register:
      required:
        - grantType
        - surname
        - name
      type: object
      properties:
        grantType:
          type: string
          description: Тип данных для регистрации
          enum:
            - email
            - phone
        phone:
          type: string
          description: Номер телефона пользователя
          example: '79225551234'
        email:
          type: string
          description: Email пользователя
          example: 'user@user.user1'
        password:
          type: string
          description: Пароль пользователя
          example: 'qwerty12'
        name:
          type: string
          example: Ivan
        surname:
          type: string
          example: Ivanov
    Auth:
      required:
        - grantType
      type: object
      properties:
        grantType:
          type: string
          description: Тип авторизационных данных
          enum:
            - email
            - phone
        phone:
          type: string
          description: Номер телефона пользователя
        email:
          type: string
          description: Email пользователя
        password:
          type: string
          description: Пароль пользователя
    ResetPasswordCodeRequest:
      required:
        - grantType
      type: object
      properties:
        grantType:
          type: string
          description: Тип данных для восстановления пароля
          enum:
            - email
            - phone
        phone:
          type: string
          description: Номер телефона пользователя
        email:
          type: string
          description: Email пользователя
    CodeRequest:
      required:
        - code
        - grantType
      type: object
      properties:
        grantType:
          type: string
        email:
          type: string
        phone:
          type: string
        code:
          type: string
    ResetPasswordRequest:
      required:
        - code
        - grantType
        - password
      type: object
      properties:
        grantType:
          type: string
        email:
          type: string
        phone:
          type: string
        password:
          type: string
        code:
          type: string
    TokenData:
      required:
        - accessToken
        - expiresIn
        - refreshToken
      type: object
      properties:
        accessToken:
          type: string
        expiresIn:
          type: integer
          format: int64
        refreshToken:
          type: string
    User:
      required:
        - name
        - surname
        - email
        - phone
      type: object
      properties:
        name:
          type: string
          example: Ivan
        lastname:
          type: string
          example: Ivanovich
        surname:
          type: string
          example: Ivanov
        email:
          type: string
          format: email
          example: user1@mail.com
        phone:
          type: string
          example: '79225551234'
    Trade:
      type: object
      properties:
        id:
          type: integer
          description: айди торга
        lotCount:
          type: integer
          description: количество лотов в торгах
        externalId:
          type: string
          description: номер торгов
        publishDateSmi:
          type: string
          description: дата в формате Iso8601
        publishDateEfir:
          type: string
          description: дата в формате Iso8601
        type:
          type: string
          description: тип аукциона
        priceOfferForm:
          type: string
          enum:
            - open
            - close
          description: тип предложения о цене
        eventTime:
          type: object
          properties:
            start:
              type: string
              description: дата и время начала торгов (null, если priceOfferForm = close)
            end:
              type: string
              description: дата и время окончания торгов (null, если priceOfferForm = close)
            result:
              type: string
              description: //Дата и время объявления результатов торгов (null, если priceOfferForm = open)
        applicationTime:
          type: object
          properties:
            start:
              type: string
              description: дата и время начала приема заявок
            end:
              type: string
              description: дата и время окончания приема заявок
        organizer:
          $ref: "#/components/schemas/BidderInfo"
        arbitrManager:
          $ref: "#/components/schemas/BidderInfo"
        debtorID:
          type: integer
          description: айдишник должника
        tradePlace:
          type: object
          properties:
            name:
              type: string
              description: название ЭТП
            site:
              type: string
              description: сайт ЭТП
    TradeInfo:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/LotShort'
        pagination:
          $ref: '#/components/schemas/Pagination'
    TradeShort:
      type: object
      properties:
        id:
          type: integer
          description: айди торга
        externalId:
          type: string
          description: номер торгов
        type:
          type: string
          description: тип аукциона
        lotCount:
          type: integer
          description: количество лотов в торгах
        eventTime:
          type: object
          properties:
            start:
              type: string
              description: дата и время начала торгов (null, если priceOfferForm = close)
            end:
              type: string
              description: дата и время окончания торгов (null, если priceOfferForm = close)
            result:
              type: string
              description: //Дата и время объявления результатов торгов (null, если priceOfferForm = open)
        applicationTime:
          type: object
          properties:
            start:
              type: string
              description: дата и время начала приема заявок
            end:
              type: string
              description: дата и время окончания приема заявок
    LotShort:
      type: object
      properties:
        id:
          type: integer
          description: айди лота
        trade:
          $ref: '#/components/schemas/TradeShort'
        isWatched:
          type: boolean
          description: Просмотрено/не просмотрено
        categories:
          type: object
          description: Объект с классификатороми
          example: {
            "realEstate": [
              "residentialProperty",
              "land"
            ],
          }
        isPinned:
          type: boolean
          description: закреплен/не закреплен
        inFavourites:
          type: boolean
          description: в избранном/нет
        isHide:
          type: boolean
          description: скрыт/не скрыт
        description:
          type: string
          description: описание лота
        state:
          type: string
          description: статус лота
        tradingNumber:
          type: string
          description: номер торгов
        lotNumber:
          type: string
          description: номер лота
        photos:
          type: array
          description: массив фоток
          example: [
            { "preview": "http://127.0.0.1:8000/storage/auction-files/auction-695/previews/IMG-20220209-WA0009.jpg",
              "main": "http://127.0.0.1:8000/storage/auction-files/auction-695/IMG-20220209-WA0009.jpg" },
            { "preview": "http://127.0.0.1:8000/storage/auction-files/auction-695/previews/IMG-20220209-WA0009.jpg",
              "main": "http://127.0.0.1:8000/storage/auction-files/auction-695/IMG-20220209-WA0009.jpg" },
          ]
        location:
          type: string
          description: геометка (адрес у нас будет именно для лота, а не для торга)
        startPrice:
          type: number
          example: 0.00
        stepPrice:
          type: object
          properties:
            type:
              type: string
              enum:
                - rubles
                - percent
            value:
              type: number
              example: 0.00
        deposit:
          type: object
          properties:
            type:
              type: string
              enum:
                - rubles
                - percent
            value:
              type: number
              example: 0.00
        currentPrice:
          type: number
        currentPriceState:
          type: string
          enum:
            - up
            - hold
            - down
        cadastralData:
          type: object
          properties:
            number:
              type: string
          description: пока только кадастровый номер, потом добавлю площадь и кадастровую стоимость
    Lot:
      type: object
      properties:
        id:
          type: integer
          description: айди лота
        trade:
          $ref: '#/components/schemas/Trade'
        isWatched:
          type: boolean
          description: Просмотрено/не просмотрено
        categories:
          type: object
          description: Объект с классификатороми
          example: {
            "realEstate": [
              "residentialProperty",
              "land"
            ],
          }
        isPinned:
          type: boolean
          description: закреплен/не закреплен
        inFavourites:
          type: boolean
          description: в избранном/нет
        isHide:
          type: boolean
          description: скрыт/не скрыт
        description:
          type: string
          description: описание лота
        state:
          type: string
          description: статус лота
        tradingNumber:
          type: string
          description: номер торгов
        lotNumber:
          type: string
          description: номер лота
        photos:
          type: array
          description: массив фоток
          example: [
            { "preview": "http://127.0.0.1:8000/storage/auction-files/auction-695/previews/IMG-20220209-WA0009.jpg",
              "main": "http://127.0.0.1:8000/storage/auction-files/auction-695/IMG-20220209-WA0009.jpg" },
            { "preview": "http://127.0.0.1:8000/storage/auction-files/auction-695/previews/IMG-20220209-WA0009.jpg",
              "main": "http://127.0.0.1:8000/storage/auction-files/auction-695/IMG-20220209-WA0009.jpg" },
          ]
        location:
          type: string
          description: геометка (адрес у нас будет именно для лота, а не для торга)
        startPrice:
          type: number
          example: 0.00
        stepPrice:
          type: object
          properties:
            type:
              type: string
              enum:
                - rubles
                - percent
            value:
              type: number
              example: 0.00
        deposit:
          type: object
          properties:
            type:
              type: string
              enum:
                - rubles
                - percent
            value:
              type: number
              example: 0.00
        priceReduction:
          type: array
          example:
            [ {
              "time": "string",
              "price": 0.0,
              "deposit": 0.0
            },{
              "time": "string",
              "price": 0.0,
              "deposit": 0.0
            } ]
          description: цена или сумма залога могут быть нулевыми
        currentPrice:
          type: number
        currentPriceState:
          type: string
          enum:
            - up
            - hold
            - down
        link:
          type: string
        efrsbLink:
          type: string
          description: ссылка на лот на федресурсе
        cadastralData:
          type: object
          properties:
            number:
              type: string
          description: пока только кадастровый номер, потом добавлю площадь и кадастровую стоимость
    Pagination:
      type: object
      properties:
        total:
          type: integer
          description: количество всех записей
        count:
          type: integer
          description: количество выведенных записей
        perPage:
          type: integer
          description: предыдущая страница
        currentPage:
          type: integer
          description: текущая страница
        totalPages:
          type: integer
          description: количество всех страниц
    Notification:
      required:
        - value
        - date
      type: object
      properties:
        value:
          type: string
          description: текст уведомления
        date:
          type: string
          description: дата уведомления
    Debtor:
      required:
        - name
        - address
        - region
      type: object
      properties:
        name:
          type: string
          description: ФИО должника (физ.лица) или короткое название организации (юр. лица)
        inn:
          type: string
          description: ИНН (может быть нулевым)
        region:
          type: string
        address:
          type: string
        caseNumber:
          type: string
          description: номер судебного дела
        court:
          type: string
          description: суд
    ArbitrManager:
      required:
        - name
        - inn
      type: object
      properties:
        name:
          type: string
        inn:
          type: string
        sro:
          type: string
          description: название СРО
        sroINN:
          type: string
          description: ИНН СРО
        sroRegNum:
          type: string
          description: регистрационный номер СРО
    Error:
      required:
        - code
        - detail
        - title
      type: object
      properties:
        code:
          type: integer
          format: int32
        title:
          type: string
        detail:
          type: string
    ActionWithLot:
      required:
        - lot_id
        - type
      type: object
      properties:
        lot_id:
          type: integer
          description: Айдишник лота, который нужно добавить/удалить в/из "просмотрено", "скрыто", "закреплено"
        type:
          type: string
          enum:
            - seen
            - hidden
            - fixed
    BidderInfo:
      type: object
      properties:
        type:
          type: string
          enum:
             - person
             - company
        id:
          type: integer
        person:
          type: object
          properties:
            firstName:
              type: string
            middleName:
              type: string
            lastName:
              type: string
        company:
          type: object
          properties:
            shortName:
              type: string
            fullName:
              type: string

    Filters:
      type: object
      properties:
        categories:
          type: array
          default: null
          example: [ 'commercialRealEstate', 'land', 'obligations' ]
          items:
            type: string
            description: названия отмеченных категорий, если выбрана одна из главных категорий - присылать ее название и названия всех подкатегорий
        regions:
          type: array
          default: null
          example: [ 'MoscowCity', 'VoronezhRegion', 'KamchatkaKrai' ]
          items:
            type: string
            description: названия отмеченных регионов, если выбрана группа регионов - присылать все регионы этой группы
        prices:
          default: null
          type: object
          example: {
            currentPrice:
              {
                min: 0,
                max: 100000
              },
            startPrice:
              {
                min: 0,
                max: 100000
              },
            minPrice:
              {
                min: 0,
                max: 100000
              },
            percentageReduction:
              {
                min: 0,
                max: 10
              }

          }
          properties:
            currentPrice:
              type: object
              default: null
              properties:
                max:
                  type: number
                  description: максимальная текущая цена лота
                min:
                  type: number
                  description: минимальная текущая цена лота
            startPrice:
              type: object
              default: null
              properties:
                max:
                  type: number
                  description: максимальная начальная цена лота
                min:
                  type: number
                  description: минимальная начальная цена лота
            minPrice:
              type: object
              default: null
              properties:
                max:
                  type: number
                  description: максимальная цена лота, если не задана - подать null
                min:
                  type: number
                  description: минимальная цена лота, если не задана - подать null
            percentageReduction:
              type: object
              default: null
              description: пока не сделано (!)
              properties:
                max:
                  type: number
                  description: максимальный процент снижения
                min:
                  type: number
                  description: минимальный процент снижения
        dates:
          type: object
          default: null
          example: {
            eventTimeStart: {
              start: '23.06.2022',
              end: '23.08.2022'
            },
            eventTimeEnd: {
              start: '23.06.2022',
              end: '23.08.2022'
            },
            applicationTimeStart: {
              start: '23.06.2022',
              end: '23.08.2022'
            },
            applicationTimeEnd: {
              start: '23.06.2022',
              end: '23.08.2022'
            }
          }
          properties:
            eventTimeStart:
              type: object
              default: null
              properties:
                start:
                  type: string
                end:
                  type: string
            eventTimeEnd:
              type: object
              default: null
              properties:
                start:
                  type: string
                end:
                  type: string
            applicationTimeStart:
              type: object
              default: null
              properties:
                start:
                  type: string
                end:
                  type: string
            applicationTimeEnd:
              type: object
              default: null
              properties:
                start:
                  type: string
                end:
                  type: string
        extraOptions:
          type: object
          default: null
          example: {
            debtorCategories:['SimplePerson', 'SimpleOrganization'],
            debtors: [1, 2, 3],
            organizers: [1, 2, 3],
            arbitrManagers: [1, 2, 3]
          }
          properties:
            debtorCategories:
              type: array
              default: null
              items:
                type: string
                description: название категории должника
            debtors:
              type: array
              default: null
              example: [ 1, 2, 3 ]
              items:
                type: integer
                description: айдишники должников
            organizers:
              type: array
              default: null
              example: [ 1, 2, 3 ]
              items:
                type: integer
                description: айдишники организаторов торгов
            arbitrManagers:
              type: array
              default: null
              example: [ 1, 2, 3 ]
              items:
                type: integer
                description: айдишники арбитражных управляющих

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
